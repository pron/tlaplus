/* Generated By:23&JavaCC: Do not edit this line. TLAplusParserTokenManager.java */
package tla2sany.parser;
import tla2sany.st.ParseTree;
import tla2sany.st.TreeNode;
import tlc2.output.EC;
import tla2sany.utilities.Vector;
import tla2sany.utilities.Stack;
import util.Assert;
import util.UniqueString;
import util.ToolIO;

public class TLAplusParserTokenManager implements TLAplusParserConstants
{
  static int bracketCount = 0;
  public  java.io.PrintStream debugStream = System.out;
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x4L) != 0L)
            return 10;
         return -1;
      case 1:
         if ((active0 & 0x4L) != 0L)
            return 9;
         return -1;
      case 2:
         if ((active0 & 0x4L) != 0L)
            return 0;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private final int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private final int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa1_0(0x4L);
      default :
         return jjMoveNfa_0(11, 0);
   }
}
private final int jjMoveStringLiteralDfa1_0(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x4L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0);
}
private final int jjMoveStringLiteralDfa2_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(0, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x4L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0);
}
private final int jjMoveStringLiteralDfa3_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 62:
         if ((active0 & 0x4L) != 0L)
            return jjStopAtPos(3, 2);
         break;
      default :
         break;
   }
   return jjStartNfa_0(2, active0);
}
private final void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private final void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private final void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}
private final void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}
private final void jjCheckNAddStates(int start)
{
   jjCheckNAdd(jjnextStates[start]);
   jjCheckNAdd(jjnextStates[start + 1]);
}
private final int jjMoveNfa_0(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 12;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 1:
                  if (curChar == 45)
                     jjCheckNAddStates(0, 2);
                  break;
               case 2:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(2, 8);
                  break;
               case 9:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 0;
                  break;
               case 10:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 3:
                  if (curChar == 69)
                     kind = 3;
                  break;
               case 4:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 5:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 6:
                  if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar == 77)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 12 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_4(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_4(int pos, long active0)
{
   return jjMoveNfa_4(jjStopStringLiteralDfa_4(pos, active0), pos + 1);
}
private final int jjStartNfaWithStates_4(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_4(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_4()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_4(0x40000000L);
      default :
         return jjMoveNfa_4(0, 0);
   }
}
private final int jjMoveStringLiteralDfa1_4(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 41:
         if ((active0 & 0x40000000L) != 0L)
            return jjStopAtPos(1, 30);
         break;
      default :
         break;
   }
   return jjStartNfa_4(0, active0);
}
private final int jjMoveNfa_4(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 4;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (curChar == 40)
                     jjAddStates(3, 4);
                  break;
               case 1:
                  if (curChar == 46)
                     kind = 31;
                  break;
               case 2:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if (curChar == 42 && kind > 31)
                     kind = 31;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 4 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjMoveStringLiteralDfa0_1()
{
   return jjMoveNfa_1(0, 0);
}
private final int jjMoveNfa_1(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 58;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 19)
                        kind = 19;
                     jjCheckNAddStates(5, 13);
                  }
                  else if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 11;
                  if (curChar == 48)
                  {
                     if (kind > 19)
                        kind = 19;
                  }
                  break;
               case 1:
               case 2:
                  if (curChar == 45)
                     jjCheckNAddStates(14, 16);
                  break;
               case 3:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(3, 9);
                  break;
               case 10:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 11:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(17, 18);
                  break;
               case 16:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
               case 19:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(19);
                  break;
               case 23:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  jjCheckNAddStates(5, 13);
                  break;
               case 24:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  jjCheckNAdd(24);
                  break;
               case 25:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(25, 28);
                  break;
               case 27:
               case 42:
               case 52:
                  if (curChar == 47)
                     jjCheckNAdd(26);
                  break;
               case 28:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(29, 32);
                  break;
               case 30:
                  if (curChar == 47 && kind > 113)
                     kind = 113;
                  break;
               case 32:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(33, 34);
                  break;
               case 35:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(36, 37);
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
               case 41:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(41, 43);
                  break;
               case 43:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
               case 45:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(45, 47);
                  break;
               case 47:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
               case 49:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(49);
                  break;
               case 51:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(19, 20);
                  break;
               case 53:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(21, 22);
                  break;
               case 56:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjstateSet[jjnewStateCnt++] = 57;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x7fffffe0777fffeL & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAddStates(23, 27);
                  }
                  else if ((0x880000L & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjAddStates(28, 30);
                  }
                  else if (curChar == 64)
                  {
                     if (kind > 231)
                        kind = 231;
                  }
                  else if (curChar == 95)
                     jjCheckNAddTwoStates(14, 15);
                  if (curChar == 83)
                     jjCheckNAdd(17);
                  else if (curChar == 87)
                     jjCheckNAdd(17);
                  break;
               case 4:
                  if (curChar == 69 && kind > 20)
                     kind = 20;
                  break;
               case 5:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 6:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 9:
                  if (curChar == 77)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 13:
                  if (curChar == 95)
                     jjCheckNAddTwoStates(14, 15);
                  break;
               case 14:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(14, 15);
                  break;
               case 15:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(16);
                  break;
               case 16:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(16);
                  break;
               case 17:
                  if (curChar != 70)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 18:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(19);
                  break;
               case 19:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(19);
                  break;
               case 20:
                  if (curChar == 87)
                     jjCheckNAdd(17);
                  break;
               case 21:
                  if (curChar == 83)
                     jjCheckNAdd(17);
                  break;
               case 22:
                  if (curChar == 64)
                     kind = 231;
                  break;
               case 25:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjAddStates(31, 32);
                  break;
               case 26:
                  if (curChar == 92 && kind > 112)
                     kind = 112;
                  break;
               case 29:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjAddStates(33, 34);
                  break;
               case 31:
               case 46:
               case 55:
                  if (curChar == 92)
                     jjCheckNAdd(30);
                  break;
               case 33:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(35, 36);
                  break;
               case 34:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(35);
                  break;
               case 35:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(35);
                  break;
               case 37:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(38);
                  break;
               case 38:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(38);
                  break;
               case 39:
                  if ((0x880000L & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjAddStates(28, 30);
                  break;
               case 40:
                  if ((0x7fffffe07ffffbeL & l) != 0L)
                     jjCheckNAddTwoStates(41, 43);
                  break;
               case 41:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(41, 43);
                  break;
               case 44:
                  if ((0x7fffffe07ffffbeL & l) != 0L)
                     jjCheckNAddTwoStates(45, 47);
                  break;
               case 45:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(45, 47);
                  break;
               case 48:
                  if ((0x7fffffe87ffffbeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(49);
                  break;
               case 49:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(49);
                  break;
               case 50:
                  if ((0x7fffffe0777fffeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAddStates(23, 27);
                  break;
               case 51:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(51, 53);
                  break;
               case 54:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(54, 56);
                  break;
               case 57:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(57);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 58 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjMoveStringLiteralDfa0_5()
{
   return jjMoveNfa_5(0, 0);
}
private final int jjMoveNfa_5(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 3;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x2400L & l) != 0L)
                  {
                     if (kind > 32)
                        kind = 32;
                  }
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 1:
                  if (curChar == 10 && kind > 32)
                     kind = 32;
                  break;
               case 2:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_2(int pos, long active0, long active1, long active2, long active3)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x8000000000L) != 0L || (active1 & 0x100001000L) != 0L)
            return 41;
         if ((active1 & 0x20c00L) != 0L)
         {
            jjmatchedKind = 231;
            return 11;
         }
         if ((active0 & 0x400000000000000L) != 0L || (active1 & 0x40000000006c8000L) != 0L)
         {
            jjmatchedKind = 231;
            return 442;
         }
         if ((active3 & 0x500L) != 0L)
            return 409;
         if ((active1 & 0x1L) != 0L || (active2 & 0x1L) != 0L)
         {
            jjmatchedKind = 231;
            return 153;
         }
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 231;
            return 506;
         }
         if ((active1 & 0x8000000L) != 0L)
            return 526;
         if ((active0 & 0x2000000000000000L) != 0L || (active1 & 0x204L) != 0L)
         {
            jjmatchedKind = 231;
            return 142;
         }
         if ((active0 & 0xc1d6b00000000000L) != 0L || (active1 & 0xb0000000000060f8L) != 0L)
         {
            jjmatchedKind = 231;
            return 527;
         }
         if ((active2 & 0x12L) != 0L)
            return 461;
         if ((active3 & 0x4000000L) != 0L)
         {
            jjmatchedKind = 231;
            return -1;
         }
         if ((active1 & 0x1000000000L) != 0L || (active3 & 0x10000L) != 0L)
            return 421;
         if ((active0 & 0x8000000L) != 0L || (active1 & 0x180000000000000L) != 0L || (active2 & 0x200001f5e61000L) != 0L || (active3 & 0x2000000000L) != 0L)
            return 211;
         if ((active0 & 0x60000000000L) != 0L)
         {
            jjmatchedKind = 231;
            return 193;
         }
         if ((active2 & 0x500000000000000L) != 0L)
            return 182;
         if ((active0 & 0x28000000000000L) != 0L || (active1 & 0x100L) != 0L)
         {
            jjmatchedKind = 231;
            return 16;
         }
         if ((active1 & 0x40000080000000L) != 0L || (active2 & 0x8000000000000000L) != 0L || (active3 & 0x4L) != 0L)
            return 168;
         if ((active3 & 0x1000L) != 0L)
            return 416;
         if ((active1 & 0x20000000L) != 0L)
            return 465;
         return -1;
      case 1:
         if ((active1 & 0x1L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 231;
               jjmatchedPos = 1;
            }
            return 152;
         }
         if ((active1 & 0xc00L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 231;
               jjmatchedPos = 1;
            }
            return 10;
         }
         if ((active2 & 0x8000000000000000L) != 0L)
            return 167;
         if ((active0 & 0x400000000000000L) != 0L || (active1 & 0x200000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 231;
               jjmatchedPos = 1;
            }
            return 107;
         }
         if ((active0 & 0x4016000000000000L) != 0L)
            return 527;
         if ((active2 & 0x20000L) != 0L)
            return 216;
         if ((active2 & 0x200000L) != 0L)
            return 278;
         if ((active1 & 0x80000000000000L) != 0L || (active2 & 0x5800000L) != 0L)
            return 280;
         if ((active0 & 0x4000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 231;
               jjmatchedPos = 1;
            }
            return 520;
         }
         if ((active2 & 0x1000L) != 0L)
            return 255;
         if ((active1 & 0x80000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 192;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active3 & 0x4000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 231;
               jjmatchedPos = 0;
            }
            return -1;
         }
         if ((active2 & 0x1f0000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 155;
               jjmatchedPos = 1;
            }
            return 114;
         }
         if ((active1 & 0x40000000004c8000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 231;
               jjmatchedPos = 1;
            }
            return 528;
         }
         if ((active1 & 0x100000000000000L) != 0L)
            return 405;
         if ((active0 & 0x8000000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 231;
               jjmatchedPos = 1;
            }
            return 15;
         }
         if ((active2 & 0x400000L) != 0L)
            return 398;
         if ((active0 & 0x8000000000L) != 0L || (active1 & 0x1000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 122;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active0 & 0xa1e0b60000000000L) != 0L || (active1 & 0xb0000000000263fcL) != 0L || (active2 & 0x1L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 231;
               jjmatchedPos = 1;
            }
            return 527;
         }
         if ((active2 & 0x40000L) != 0L)
            return 276;
         return -1;
      case 2:
         if ((active1 & 0x80000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 192;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active1 & 0xc00L) != 0L)
         {
            jjmatchedKind = 231;
            jjmatchedPos = 2;
            return 9;
         }
         if ((active1 & 0x1L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 2;
            return 154;
         }
         if ((active0 & 0x88000000000000L) != 0L || (active1 & 0x2008L) != 0L)
            return 527;
         if ((active2 & 0x1f0000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 155;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active0 & 0x8000000000L) != 0L || (active1 & 0x1000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 122;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active2 & 0x200000L) != 0L)
         {
            jjmatchedKind = 148;
            jjmatchedPos = 2;
            return -1;
         }
         if ((active0 & 0xa164b60000000000L) != 0L || (active1 & 0xb0000000000243f4L) != 0L || (active2 & 0x1L) != 0L)
         {
            jjmatchedKind = 231;
            jjmatchedPos = 2;
            return 527;
         }
         if ((active1 & 0x40000000004c8000L) != 0L)
         {
            jjmatchedKind = 231;
            jjmatchedPos = 2;
            return 528;
         }
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 231;
            jjmatchedPos = 2;
            return 519;
         }
         return -1;
      case 3:
         if ((active1 & 0x40000000000c8000L) != 0L)
         {
            jjmatchedKind = 231;
            jjmatchedPos = 3;
            return 528;
         }
         if ((active2 & 0x200000L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 148;
               jjmatchedPos = 2;
            }
            return -1;
         }
         if ((active0 & 0x164a40000000000L) != 0L || (active1 & 0xb000000000004dc5L) != 0L || (active2 & 0x1L) != 0L)
         {
            jjmatchedKind = 231;
            jjmatchedPos = 3;
            return 527;
         }
         if ((active0 & 0xa000120000000000L) != 0L || (active1 & 0x20230L) != 0L)
            return 527;
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 231;
            jjmatchedPos = 3;
            return 518;
         }
         if ((active1 & 0x400000L) != 0L)
            return 528;
         if ((active0 & 0x8000000000L) != 0L || (active1 & 0x1000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 122;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active2 & 0x1f0000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 155;
               jjmatchedPos = 1;
            }
            return -1;
         }
         return -1;
      case 4:
         if ((active2 & 0x200000L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 148;
               jjmatchedPos = 2;
            }
            return -1;
         }
         if ((active0 & 0x120000000000000L) != 0L || (active1 & 0x8000000000000c00L) != 0L)
            return 527;
         if ((active1 & 0x8000L) != 0L)
            return 528;
         if ((active0 & 0x8000000000L) != 0L || (active1 & 0x1000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 122;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 231;
            jjmatchedPos = 4;
            return 517;
         }
         if ((active2 & 0x1f0000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 155;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active1 & 0x40000000000c0000L) != 0L)
         {
            jjmatchedKind = 231;
            jjmatchedPos = 4;
            return 528;
         }
         if ((active0 & 0x44a40000000000L) != 0L || (active1 & 0x30000000000041c5L) != 0L || (active2 & 0x1L) != 0L)
         {
            jjmatchedKind = 231;
            jjmatchedPos = 4;
            return 527;
         }
         return -1;
      case 5:
         if ((active2 & 0x200000L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 148;
               jjmatchedPos = 2;
            }
            return -1;
         }
         if ((active1 & 0xc0000L) != 0L)
         {
            jjmatchedKind = 231;
            jjmatchedPos = 5;
            return 528;
         }
         if ((active0 & 0x40244000000000L) != 0L || (active1 & 0x101L) != 0L || (active2 & 0x1L) != 0L)
            return 527;
         if ((active1 & 0x4000000000000000L) != 0L)
            return 528;
         if ((active0 & 0x4800000000000L) != 0L || (active1 & 0x30000000000040c4L) != 0L)
         {
            jjmatchedKind = 231;
            jjmatchedPos = 5;
            return 527;
         }
         if ((active0 & 0x8000000000L) != 0L || (active1 & 0x1000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 122;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active2 & 0x1e0000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 155;
               jjmatchedPos = 1;
            }
            return -1;
         }
         return -1;
      case 6:
         if ((active1 & 0x80000L) != 0L)
         {
            jjmatchedKind = 231;
            jjmatchedPos = 6;
            return 528;
         }
         if ((active0 & 0x4000000000000L) != 0L || (active1 & 0x2000000000004000L) != 0L)
         {
            jjmatchedKind = 231;
            jjmatchedPos = 6;
            return 527;
         }
         if ((active2 & 0x200000L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 148;
               jjmatchedPos = 2;
            }
            return -1;
         }
         if ((active0 & 0x800000000000L) != 0L || (active1 & 0x10000000000000c4L) != 0L)
            return 527;
         if ((active1 & 0x40000L) != 0L)
            return 528;
         if ((active0 & 0x8000000000L) != 0L || (active1 & 0x1000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 122;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active2 & 0x1a0000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 155;
               jjmatchedPos = 1;
            }
            return -1;
         }
         return -1;
      case 7:
         if ((active2 & 0x200000L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 148;
               jjmatchedPos = 2;
            }
            return -1;
         }
         if ((active0 & 0x4000000000000L) != 0L)
            return 527;
         if ((active1 & 0x80000L) != 0L)
            return 528;
         if ((active0 & 0x8000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 122;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active1 & 0x2000000000004000L) != 0L)
         {
            jjmatchedKind = 231;
            jjmatchedPos = 7;
            return 527;
         }
         return -1;
      case 8:
         if ((active2 & 0x200000L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 148;
               jjmatchedPos = 2;
            }
            return -1;
         }
         if ((active1 & 0x2000000000004000L) != 0L)
            return 527;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_2(int pos, long active0, long active1, long active2, long active3)
{
   return jjMoveNfa_2(jjStopStringLiteralDfa_2(pos, active0, active1, active2, active3), pos + 1);
}
private final int jjStartNfaWithStates_2(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_2(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_2()
{
   switch(curChar)
   {
      case 33:
         jjmatchedKind = 106;
         return jjMoveStringLiteralDfa1_2(0x0L, 0x0L, 0x0L, 0x8000000L);
      case 35:
         jjmatchedKind = 188;
         return jjMoveStringLiteralDfa1_2(0x0L, 0x0L, 0x800000000000000L, 0x0L);
      case 36:
         jjmatchedKind = 214;
         return jjMoveStringLiteralDfa1_2(0x0L, 0x0L, 0x0L, 0x200000L);
      case 37:
         jjmatchedKind = 217;
         return jjMoveStringLiteralDfa1_2(0x0L, 0x0L, 0x0L, 0x1000000L);
      case 38:
         jjmatchedKind = 212;
         return jjMoveStringLiteralDfa1_2(0x0L, 0x0L, 0x0L, 0x80000L);
      case 40:
         return jjStartNfaWithStates_2(0, 93, 465);
      case 41:
         return jjStopAtPos(0, 94);
      case 42:
         jjmatchedKind = 196;
         return jjMoveStringLiteralDfa1_2(0x0L, 0x0L, 0x0L, 0x8L);
      case 43:
         jjmatchedKind = 198;
         return jjMoveStringLiteralDfa1_2(0x0L, 0x0L, 0x0L, 0x20L);
      case 44:
         return jjStopAtPos(0, 87);
      case 45:
         jjmatchedKind = 194;
         return jjMoveStringLiteralDfa1_2(0x0L, 0x40000080000000L, 0x8000000000000000L, 0x0L);
      case 46:
         jjmatchedKind = 90;
         return jjMoveStringLiteralDfa1_2(0x0L, 0x0L, 0x0L, 0x6000L);
      case 47:
         jjmatchedKind = 132;
         return jjMoveStringLiteralDfa1_2(0x0L, 0x0L, 0x2L, 0x0L);
      case 58:
         jjmatchedKind = 88;
         return jjMoveStringLiteralDfa1_2(0x0L, 0x2000000L, 0x0L, 0x70000000L);
      case 60:
         jjmatchedKind = 202;
         return jjMoveStringLiteralDfa1_2(0x0L, 0x0L, 0x0L, 0x100L);
      case 61:
         jjmatchedKind = 186;
         return jjMoveStringLiteralDfa1_2(0x0L, 0x0L, 0x100000000000000L, 0x0L);
      case 62:
         return jjStartNfaWithStates_2(0, 204, 416);
      case 63:
         return jjMoveStringLiteralDfa1_2(0x0L, 0x0L, 0x0L, 0x800000L);
      case 64:
         return jjMoveStringLiteralDfa1_2(0x0L, 0x0L, 0x0L, 0x4000000L);
      case 65:
         return jjMoveStringLiteralDfa1_2(0x4000000000L, 0x0L, 0x0L, 0x0L);
      case 66:
         return jjMoveStringLiteralDfa1_2(0x4000000000000000L, 0x0L, 0x0L, 0x0L);
      case 67:
         return jjMoveStringLiteralDfa1_2(0x60000000000L, 0x0L, 0x0L, 0x0L);
      case 68:
         return jjMoveStringLiteralDfa1_2(0x0L, 0x1L, 0x1L, 0x0L);
      case 69:
         return jjMoveStringLiteralDfa1_2(0xb00000000000L, 0x1000000000000000L, 0x0L, 0x0L);
      case 72:
         return jjMoveStringLiteralDfa1_2(0x0L, 0x30L, 0x0L, 0x0L);
      case 73:
         return jjMoveStringLiteralDfa1_2(0x16000000000000L, 0x0L, 0x0L, 0x0L);
      case 76:
         return jjMoveStringLiteralDfa1_2(0x28000000000000L, 0x100L, 0x0L, 0x0L);
      case 77:
         return jjMoveStringLiteralDfa1_2(0x40000000000000L, 0x0L, 0x0L, 0x0L);
      case 78:
         return jjMoveStringLiteralDfa1_2(0x80000000000000L, 0x0L, 0x0L, 0x0L);
      case 79:
         return jjMoveStringLiteralDfa1_2(0x8100000000000000L, 0xc0L, 0x0L, 0x0L);
      case 80:
         return jjMoveStringLiteralDfa1_2(0x0L, 0x20c00L, 0x0L, 0x0L);
      case 81:
         return jjMoveStringLiteralDfa1_2(0x0L, 0x2000L, 0x0L, 0x0L);
      case 82:
         return jjMoveStringLiteralDfa1_2(0x0L, 0x4000L, 0x0L, 0x0L);
      case 83:
         return jjMoveStringLiteralDfa1_2(0x400000000000000L, 0x4000000000088000L, 0x0L, 0x0L);
      case 84:
         return jjMoveStringLiteralDfa1_2(0x2000000000000000L, 0x204L, 0x0L, 0x0L);
      case 85:
         return jjMoveStringLiteralDfa1_2(0x0L, 0xa000000000000008L, 0x0L, 0x0L);
      case 87:
         return jjMoveStringLiteralDfa1_2(0x0L, 0x640000L, 0x0L, 0x0L);
      case 91:
         jjmatchedKind = 96;
         return jjMoveStringLiteralDfa1_2(0x8000000000L, 0x1000L, 0x0L, 0x0L);
      case 92:
         jjmatchedKind = 181;
         return jjMoveStringLiteralDfa1_2(0x8000000L, 0x180000000000000L, 0x1f5e61000L, 0x2000000000L);
      case 93:
         jjmatchedKind = 98;
         return jjMoveStringLiteralDfa1_2(0x0L, 0x200000000L, 0x0L, 0x0L);
      case 94:
         jjmatchedKind = 190;
         return jjMoveStringLiteralDfa1_2(0x0L, 0x38000000000000L, 0x2000000000000000L, 0x0L);
      case 95:
         return jjStartNfaWithStates_2(0, 91, 526);
      case 123:
         jjmatchedKind = 101;
         return jjMoveStringLiteralDfa1_2(0x0L, 0x800000000L, 0x0L, 0x0L);
      case 124:
         jjmatchedKind = 208;
         return jjMoveStringLiteralDfa1_2(0x0L, 0x1000000000L, 0x0L, 0x0L);
      case 125:
         return jjStopAtPos(0, 102);
      default :
         return jjMoveNfa_2(0, 0);
   }
}
private final int jjMoveStringLiteralDfa1_2(long active0, long active1, long active2, long active3)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(0, active0, active1, active2, active3);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         if ((active3 & 0x8000000L) != 0L)
            return jjStopAtPos(1, 219);
         break;
      case 35:
         if ((active1 & 0x20000000000000L) != 0L)
            return jjStopAtPos(1, 117);
         else if ((active2 & 0x800000000000000L) != 0L)
            return jjStopAtPos(1, 187);
         break;
      case 36:
         if ((active3 & 0x200000L) != 0L)
            return jjStopAtPos(1, 213);
         break;
      case 37:
         if ((active3 & 0x1000000L) != 0L)
            return jjStopAtPos(1, 216);
         break;
      case 38:
         if ((active3 & 0x80000L) != 0L)
            return jjStopAtPos(1, 211);
         break;
      case 42:
         if ((active0 & 0x8000000L) != 0L)
            return jjStopAtPos(1, 27);
         else if ((active1 & 0x10000000000000L) != 0L)
            return jjStopAtPos(1, 116);
         else if ((active3 & 0x8L) != 0L)
            return jjStopAtPos(1, 195);
         break;
      case 43:
         if ((active1 & 0x8000000000000L) != 0L)
            return jjStopAtPos(1, 115);
         else if ((active3 & 0x20L) != 0L)
            return jjStopAtPos(1, 197);
         break;
      case 45:
         if ((active2 & 0x8000000000000000L) != 0L)
            return jjStartNfaWithStates_2(1, 191, 167);
         break;
      case 46:
         if ((active1 & 0x40000000000000L) != 0L)
            return jjStopAtPos(1, 118);
         else if ((active3 & 0x4000L) != 0L)
         {
            jjmatchedKind = 206;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_2(active0, 0L, active1, 0L, active2, 0L, active3, 0x2000L);
      case 47:
         if ((active2 & 0x2L) != 0L)
            return jjStopAtPos(1, 129);
         break;
      case 58:
         if ((active1 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 1;
         }
         else if ((active3 & 0x100L) != 0L)
            return jjStopAtPos(1, 200);
         return jjMoveStringLiteralDfa2_2(active0, 0L, active1, 0L, active2, 0L, active3, 0x40000000L);
      case 60:
         if ((active2 & 0x100000000000000L) != 0L)
            return jjStopAtPos(1, 184);
         break;
      case 61:
         if ((active3 & 0x20000000L) != 0L)
            return jjStopAtPos(1, 221);
         break;
      case 62:
         if ((active3 & 0x10000000L) != 0L)
            return jjStopAtPos(1, 220);
         break;
      case 63:
         if ((active3 & 0x800000L) != 0L)
            return jjStopAtPos(1, 215);
         break;
      case 64:
         if ((active3 & 0x4000000L) != 0L)
            return jjStopAtPos(1, 218);
         break;
      case 65:
         return jjMoveStringLiteralDfa2_2(active0, 0x20000000000L, active1, 0x320L, active2, 0L, active3, 0L);
      case 66:
         return jjMoveStringLiteralDfa2_2(active0, 0L, active1, 0x40L, active2, 0L, active3, 0L);
      case 69:
         return jjMoveStringLiteralDfa2_2(active0, 0x88000000000000L, active1, 0x6001L, active2, 0L, active3, 0L);
      case 70:
         if ((active0 & 0x2000000000000L) != 0L)
            return jjStartNfaWithStates_2(1, 49, 527);
         return jjMoveStringLiteralDfa2_2(active0, 0x400000000000000L, active1, 0x200000L, active2, 0L, active3, 0L);
      case 72:
         return jjMoveStringLiteralDfa2_2(active0, 0x2000040000000000L, active1, 0x4L, active2, 0L, active3, 0L);
      case 73:
         return jjMoveStringLiteralDfa2_2(active0, 0L, active1, 0x460010L, active2, 0L, active3, 0L);
      case 76:
         return jjMoveStringLiteralDfa2_2(active0, 0x100000000000L, active1, 0L, active2, 0L, active3, 0L);
      case 77:
         return jjMoveStringLiteralDfa2_2(active0, 0L, active1, 0x80L, active2, 0L, active3, 0L);
      case 78:
         if ((active0 & 0x10000000000000L) != 0L)
         {
            jjmatchedKind = 52;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_2(active0, 0x8004000000000000L, active1, 0xb000000000000000L, active2, 0L, active3, 0L);
      case 79:
         return jjMoveStringLiteralDfa2_2(active0, 0x60000000000000L, active1, 0L, active2, 0x1L, active3, 0L);
      case 82:
         return jjMoveStringLiteralDfa2_2(active0, 0L, active1, 0xc00L, active2, 0L, active3, 0L);
      case 83:
         return jjMoveStringLiteralDfa2_2(active0, 0x4000000000L, active1, 0x8L, active2, 0L, active3, 0L);
      case 84:
         return jjMoveStringLiteralDfa2_2(active0, 0x100000000000000L, active1, 0x8000L, active2, 0L, active3, 0L);
      case 85:
         return jjMoveStringLiteralDfa2_2(active0, 0L, active1, 0x4000000000080000L, active2, 0L, active3, 0L);
      case 88:
         return jjMoveStringLiteralDfa2_2(active0, 0xa00000000000L, active1, 0L, active2, 0L, active3, 0L);
      case 89:
         if ((active0 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_2(1, 62, 527);
         break;
      case 93:
         return jjMoveStringLiteralDfa2_2(active0, 0x8000000000L, active1, 0x1000L, active2, 0L, active3, 0L);
      case 94:
         if ((active2 & 0x2000000000000000L) != 0L)
            return jjStopAtPos(1, 189);
         break;
      case 95:
         if ((active1 & 0x200000000L) != 0L)
            return jjStopAtPos(1, 97);
         break;
      case 99:
         return jjMoveStringLiteralDfa2_2(active0, 0L, active1, 0L, active2, 0x1000L, active3, 0L);
      case 101:
         return jjMoveStringLiteralDfa2_2(active0, 0L, active1, 0L, active2, 0x20000L, active3, 0L);
      case 103:
         return jjMoveStringLiteralDfa2_2(active0, 0L, active1, 0L, active2, 0x40000L, active3, 0L);
      case 105:
         return jjMoveStringLiteralDfa2_2(active0, 0L, active1, 0L, active2, 0x200000L, active3, 0L);
      case 108:
         return jjMoveStringLiteralDfa2_2(active0, 0L, active1, 0x80000000000000L, active2, 0x5800000L, active3, 0L);
      case 110:
         return jjMoveStringLiteralDfa2_2(active0, 0L, active1, 0x100000000000000L, active2, 0L, active3, 0L);
      case 111:
         return jjMoveStringLiteralDfa2_2(active0, 0L, active1, 0L, active2, 0x1f0000000L, active3, 0L);
      case 116:
         return jjMoveStringLiteralDfa2_2(active0, 0L, active1, 0L, active2, 0L, active3, 0x2000000000L);
      case 117:
         return jjMoveStringLiteralDfa2_2(active0, 0L, active1, 0L, active2, 0x400000L, active3, 0L);
      case 124:
         if ((active1 & 0x800000000L) != 0L)
            return jjStopAtPos(1, 99);
         return jjMoveStringLiteralDfa2_2(active0, 0L, active1, 0x80000000L, active2, 0L, active3, 0L);
      case 125:
         if ((active1 & 0x1000000000L) != 0L)
            return jjStopAtPos(1, 100);
         break;
      default :
         break;
   }
   return jjStartNfa_2(0, active0, active1, active2, active3);
}
private final int jjMoveStringLiteralDfa2_2(long old0, long active0, long old1, long active1, long old2, long active2, long old3, long active3)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2) | (active3 &= old3)) == 0L)
      return jjStartNfa_2(0, old0, old1, old2, old3); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(1, active0, active1, active2, active3);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         if ((active1 & 0x80000000L) != 0L)
            return jjStopAtPos(2, 95);
         break;
      case 46:
         if ((active3 & 0x2000L) != 0L)
            return jjStopAtPos(2, 205);
         break;
      case 61:
         if ((active3 & 0x40000000L) != 0L)
            return jjStopAtPos(2, 222);
         break;
      case 65:
         return jjMoveStringLiteralDfa3_2(active0, 0x8000000000L, active1, 0x1000000000008000L, active2, 0L, active3, 0L);
      case 66:
         return jjMoveStringLiteralDfa3_2(active0, 0L, active1, 0x4000000000000000L, active2, 0L, active3, 0L);
      case 67:
         return jjMoveStringLiteralDfa3_2(active0, 0x20200000000000L, active1, 0x2000000000024000L, active2, 0L, active3, 0L);
      case 68:
         if ((active1 & 0x2000L) != 0L)
            return jjStartNfaWithStates_2(2, 77, 527);
         return jjMoveStringLiteralDfa3_2(active0, 0x40000000000000L, active1, 0x10L, active2, 0L, active3, 0L);
      case 69:
         if ((active1 & 0x8L) != 0L)
            return jjStartNfaWithStates_2(2, 67, 527);
         return jjMoveStringLiteralDfa3_2(active0, 0x2000000000000000L, active1, 0x4L, active2, 0L, active3, 0L);
      case 70:
         return jjMoveStringLiteralDfa3_2(active0, 0L, active1, 0x80001L, active2, 0L, active3, 0L);
      case 72:
         return jjMoveStringLiteralDfa3_2(active0, 0x100000000000000L, active1, 0L, active2, 0L, active3, 0L);
      case 73:
         return jjMoveStringLiteralDfa3_2(active0, 0L, active1, 0x8000000000000080L, active2, 0L, active3, 0L);
      case 75:
         return jjMoveStringLiteralDfa3_2(active0, 0L, active1, 0x200L, active2, 0L, active3, 0L);
      case 76:
         return jjMoveStringLiteralDfa3_2(active0, 0x8000000000000000L, active1, 0L, active2, 0L, active3, 0L);
      case 77:
         return jjMoveStringLiteralDfa3_2(active0, 0L, active1, 0x100L, active2, 0x1L, active3, 0L);
      case 79:
         return jjMoveStringLiteralDfa3_2(active0, 0x40000000000L, active1, 0xc00L, active2, 0L, active3, 0L);
      case 80:
         return jjMoveStringLiteralDfa3_2(active0, 0L, active1, 0x1000L, active2, 0L, active3, 0L);
      case 83:
         return jjMoveStringLiteralDfa3_2(active0, 0x4124000000000L, active1, 0L, active2, 0L, active3, 0L);
      case 84:
         if ((active0 & 0x8000000000000L) != 0L)
            return jjStartNfaWithStates_2(2, 51, 527);
         return jjMoveStringLiteralDfa3_2(active0, 0x800000000000L, active1, 0x440000L, active2, 0L, active3, 0L);
      case 86:
         return jjMoveStringLiteralDfa3_2(active0, 0L, active1, 0x60L, active2, 0L, active3, 0L);
      case 87:
         if ((active0 & 0x80000000000000L) != 0L)
            return jjStartNfaWithStates_2(2, 55, 527);
         break;
      case 95:
         if ((active0 & 0x400000000000000L) != 0L)
            return jjStopAtPos(2, 58);
         else if ((active1 & 0x200000L) != 0L)
            return jjStopAtPos(2, 85);
         break;
      case 97:
         return jjMoveStringLiteralDfa3_2(active0, 0L, active1, 0L, active2, 0x800000L, active3, 0L);
      case 100:
         return jjMoveStringLiteralDfa3_2(active0, 0L, active1, 0L, active2, 0x10000000L, active3, 0L);
      case 101:
         return jjMoveStringLiteralDfa3_2(active0, 0L, active1, 0x100000000000000L, active2, 0x1040000L, active3, 0L);
      case 105:
         return jjMoveStringLiteralDfa3_2(active0, 0L, active1, 0L, active2, 0x1000L, active3, 0x2000000000L);
      case 109:
         return jjMoveStringLiteralDfa3_2(active0, 0L, active1, 0L, active2, 0x20000000L, active3, 0L);
      case 110:
         return jjMoveStringLiteralDfa3_2(active0, 0L, active1, 0x80000000000000L, active2, 0x600000L, active3, 0L);
      case 111:
         return jjMoveStringLiteralDfa3_2(active0, 0L, active1, 0L, active2, 0x4000000L, active3, 0L);
      case 112:
         return jjMoveStringLiteralDfa3_2(active0, 0L, active1, 0L, active2, 0x40000000L, active3, 0L);
      case 113:
         return jjMoveStringLiteralDfa3_2(active0, 0L, active1, 0L, active2, 0x20000L, active3, 0L);
      case 115:
         return jjMoveStringLiteralDfa3_2(active0, 0L, active1, 0L, active2, 0x80000000L, active3, 0L);
      case 116:
         return jjMoveStringLiteralDfa3_2(active0, 0L, active1, 0L, active2, 0x100000000L, active3, 0L);
      default :
         break;
   }
   return jjStartNfa_2(1, active0, active1, active2, active3);
}
private final int jjMoveStringLiteralDfa3_2(long old0, long active0, long old1, long active1, long old2, long active2, long old3, long active3)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2) | (active3 &= old3)) == 0L)
      return jjStartNfa_2(1, old0, old1, old2, old3); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(2, active0, active1, active2, active3);
      return 3;
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa4_2(active0, 0x20000000000000L, active1, 0L, active2, 0x1L, active3, 0L);
      case 66:
         return jjMoveStringLiteralDfa4_2(active0, 0L, active1, 0x1000000000000100L, active2, 0L, active3, 0L);
      case 69:
         if ((active0 & 0x20000000000L) != 0L)
            return jjStartNfaWithStates_2(3, 41, 527);
         else if ((active0 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_2(3, 44, 527);
         else if ((active1 & 0x10L) != 0L)
            return jjStartNfaWithStates_2(3, 68, 527);
         else if ((active1 & 0x20L) != 0L)
            return jjStartNfaWithStates_2(3, 69, 527);
         else if ((active1 & 0x200L) != 0L)
            return jjStartNfaWithStates_2(3, 73, 527);
         return jjMoveStringLiteralDfa4_2(active0, 0x100a00000000000L, active1, 0L, active2, 0L, active3, 0L);
      case 70:
         return jjMoveStringLiteralDfa4_2(active0, 0L, active1, 0x80000L, active2, 0L, active3, 0L);
      case 72:
         if ((active1 & 0x400000L) != 0L)
            return jjStartNfaWithStates_2(3, 86, 528);
         return jjMoveStringLiteralDfa4_2(active0, 0L, active1, 0x2000000000000000L, active2, 0L, active3, 0L);
      case 73:
         return jjMoveStringLiteralDfa4_2(active0, 0L, active1, 0x41L, active2, 0L, active3, 0L);
      case 75:
         if ((active1 & 0x20000L) != 0L)
            return jjStartNfaWithStates_2(3, 81, 527);
         break;
      case 78:
         if ((active0 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_2(3, 61, 527);
         return jjMoveStringLiteralDfa4_2(active0, 0L, active1, 0x40000L, active2, 0L, active3, 0L);
      case 79:
         return jjMoveStringLiteralDfa4_2(active0, 0x40000000000L, active1, 0x8000000000000404L, active2, 0L, active3, 0L);
      case 82:
         return jjMoveStringLiteralDfa4_2(active0, 0L, active1, 0x1000L, active2, 0L, active3, 0L);
      case 83:
         return jjMoveStringLiteralDfa4_2(active0, 0x8000000000L, active1, 0x4000000000000000L, active2, 0L, active3, 0L);
      case 84:
         return jjMoveStringLiteralDfa4_2(active0, 0x4000000000000L, active1, 0x8080L, active2, 0L, active3, 0L);
      case 85:
         return jjMoveStringLiteralDfa4_2(active0, 0x40004000000000L, active1, 0x4000L, active2, 0L, active3, 0L);
      case 86:
         return jjMoveStringLiteralDfa4_2(active0, 0L, active1, 0x800L, active2, 0L, active3, 0L);
      case 89:
         if ((active0 & 0x8000000000000000L) != 0L)
            return jjStartNfaWithStates_2(3, 63, 527);
         break;
      case 103:
         if ((active1 & 0x100000000000000L) != 0L)
            return jjStopAtPos(3, 120);
         break;
      case 105:
         return jjMoveStringLiteralDfa4_2(active0, 0L, active1, 0L, active2, 0x120400000L, active3, 0L);
      case 108:
         return jjMoveStringLiteralDfa4_2(active0, 0L, active1, 0L, active2, 0xc0000000L, active3, 0L);
      case 109:
         return jjMoveStringLiteralDfa4_2(active0, 0L, active1, 0L, active2, 0L, active3, 0x2000000000L);
      case 110:
         return jjMoveStringLiteralDfa4_2(active0, 0L, active1, 0L, active2, 0x800000L, active3, 0L);
      case 111:
         return jjMoveStringLiteralDfa4_2(active0, 0L, active1, 0x80000000000000L, active2, 0x10000000L, active3, 0L);
      case 113:
         if ((active2 & 0x40000L) != 0L)
            return jjStopAtPos(3, 146);
         else if ((active2 & 0x1000000L) != 0L)
            return jjStopAtPos(3, 152);
         break;
      case 114:
         if ((active2 & 0x4000000L) != 0L)
            return jjStopAtPos(3, 154);
         return jjMoveStringLiteralDfa4_2(active0, 0L, active1, 0L, active2, 0x1000L, active3, 0L);
      case 116:
         return jjMoveStringLiteralDfa4_2(active0, 0L, active1, 0L, active2, 0x200000L, active3, 0L);
      case 117:
         return jjMoveStringLiteralDfa4_2(active0, 0L, active1, 0L, active2, 0x20000L, active3, 0L);
      default :
         break;
   }
   return jjStartNfa_2(2, active0, active1, active2, active3);
}
private final int jjMoveStringLiteralDfa4_2(long old0, long active0, long old1, long active1, long old2, long active2, long old3, long active3)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2) | (active3 &= old3)) == 0L)
      return jjStartNfa_2(2, old0, old1, old2, old3); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(3, active0, active1, active2, active3);
      return 4;
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa5_2(active0, 0x4000000000000L, active1, 0x2000000000000000L, active2, 0L, active3, 0L);
      case 68:
         return jjMoveStringLiteralDfa5_2(active0, 0L, active1, 0x100L, active2, 0L, active3, 0L);
      case 69:
         if ((active1 & 0x800L) != 0L)
            return jjStartNfaWithStates_2(4, 75, 527);
         else if ((active1 & 0x8000L) != 0L)
            return jjStartNfaWithStates_2(4, 79, 528);
         return jjMoveStringLiteralDfa5_2(active0, 0L, active1, 0x4000000000040000L, active2, 0L, active3, 0L);
      case 70:
         if ((active1 & 0x400L) != 0L)
            return jjStartNfaWithStates_2(4, 74, 527);
         break;
      case 73:
         return jjMoveStringLiteralDfa5_2(active0, 0L, active1, 0x80000L, active2, 0x1L, active3, 0L);
      case 76:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStartNfaWithStates_2(4, 53, 527);
         return jjMoveStringLiteralDfa5_2(active0, 0x40000000000000L, active1, 0x1000000000000000L, active2, 0L, active3, 0L);
      case 77:
         return jjMoveStringLiteralDfa5_2(active0, 0x4000000000L, active1, 0L, active2, 0L, active3, 0L);
      case 78:
         if ((active1 & 0x8000000000000000L) != 0L)
            return jjStartNfaWithStates_2(4, 127, 527);
         return jjMoveStringLiteralDfa5_2(active0, 0x800000000000L, active1, 0x1L, active2, 0L, active3, 0L);
      case 79:
         return jjMoveStringLiteralDfa5_2(active0, 0L, active1, 0x1040L, active2, 0L, active3, 0L);
      case 80:
         return jjMoveStringLiteralDfa5_2(active0, 0x200000000000L, active1, 0L, active2, 0L, active3, 0L);
      case 82:
         if ((active0 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_2(4, 56, 527);
         return jjMoveStringLiteralDfa5_2(active0, 0L, active1, 0x4004L, active2, 0L, active3, 0L);
      case 83:
         return jjMoveStringLiteralDfa5_2(active0, 0x48000000000L, active1, 0L, active2, 0L, active3, 0L);
      case 84:
         return jjMoveStringLiteralDfa5_2(active0, 0L, active1, 0x80L, active2, 0L, active3, 0L);
      case 97:
         return jjMoveStringLiteralDfa5_2(active0, 0L, active1, 0L, active2, 0x80000000L, active3, 0L);
      case 99:
         if ((active2 & 0x1000L) != 0L)
            return jjStopAtPos(4, 140);
         break;
      case 100:
         if ((active2 & 0x800000L) != 0L)
            return jjStopAtPos(4, 151);
         break;
      case 101:
         return jjMoveStringLiteralDfa5_2(active0, 0L, active1, 0L, active2, 0x200000L, active3, 0x2000000000L);
      case 105:
         return jjMoveStringLiteralDfa5_2(active0, 0L, active1, 0L, active2, 0x20000L, active3, 0L);
      case 109:
         return jjMoveStringLiteralDfa5_2(active0, 0L, active1, 0L, active2, 0x100000000L, active3, 0L);
      case 110:
         return jjMoveStringLiteralDfa5_2(active0, 0L, active1, 0L, active2, 0x20000000L, active3, 0L);
      case 111:
         return jjMoveStringLiteralDfa5_2(active0, 0L, active1, 0L, active2, 0x400000L, active3, 0L);
      case 116:
         if ((active1 & 0x80000000000000L) != 0L)
            return jjStopAtPos(4, 119);
         else if ((active2 & 0x10000000L) != 0L)
            return jjStopAtPos(4, 156);
         break;
      case 117:
         return jjMoveStringLiteralDfa5_2(active0, 0L, active1, 0L, active2, 0x40000000L, active3, 0L);
      default :
         break;
   }
   return jjStartNfa_2(3, active0, active1, active2, active3);
}
private final int jjMoveStringLiteralDfa5_2(long old0, long active0, long old1, long active1, long old2, long active2, long old3, long active3)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2) | (active3 &= old3)) == 0L)
      return jjStartNfa_2(3, old0, old1, old2, old3); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(4, active0, active1, active2, active3);
      return 5;
   }
   switch(curChar)
   {
      case 65:
         if ((active1 & 0x100L) != 0L)
            return jjStartNfaWithStates_2(5, 72, 527);
         break;
      case 67:
         return jjMoveStringLiteralDfa6_2(active0, 0L, active1, 0x80000L, active2, 0L, active3, 0L);
      case 68:
         return jjMoveStringLiteralDfa6_2(active0, 0x800000000000L, active1, 0L, active2, 0L, active3, 0L);
      case 69:
         if ((active0 & 0x4000000000L) != 0L)
            return jjStartNfaWithStates_2(5, 38, 527);
         else if ((active0 & 0x40000000000L) != 0L)
            return jjStartNfaWithStates_2(5, 42, 527);
         else if ((active0 & 0x40000000000000L) != 0L)
            return jjStartNfaWithStates_2(5, 54, 527);
         else if ((active1 & 0x1L) != 0L)
            return jjStartNfaWithStates_2(5, 64, 527);
         return jjMoveStringLiteralDfa6_2(active0, 0L, active1, 0x1000000000000084L, active2, 0L, active3, 0L);
      case 78:
         if ((active2 & 0x1L) != 0L)
            return jjStartNfaWithStates_2(5, 128, 527);
         return jjMoveStringLiteralDfa6_2(active0, 0x4000000000000L, active1, 0x2000000000000000L, active2, 0L, active3, 0L);
      case 83:
         return jjMoveStringLiteralDfa6_2(active0, 0L, active1, 0x44000L, active2, 0L, active3, 0L);
      case 84:
         if ((active0 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_2(5, 45, 527);
         else if ((active1 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_2(5, 126, 528);
         break;
      case 85:
         return jjMoveStringLiteralDfa6_2(active0, 0x8000000000L, active1, 0x40L, active2, 0L, active3, 0L);
      case 86:
         return jjMoveStringLiteralDfa6_2(active0, 0L, active1, 0x1000L, active2, 0L, active3, 0L);
      case 101:
         return jjMoveStringLiteralDfa6_2(active0, 0L, active1, 0L, active2, 0x100000000L, active3, 0L);
      case 110:
         if ((active2 & 0x400000L) != 0L)
            return jjStopAtPos(5, 150);
         break;
      case 114:
         return jjMoveStringLiteralDfa6_2(active0, 0L, active1, 0L, active2, 0x200000L, active3, 0L);
      case 115:
         if ((active2 & 0x40000000L) != 0L)
            return jjStopAtPos(5, 158);
         else if ((active3 & 0x2000000000L) != 0L)
            return jjStopAtPos(5, 229);
         return jjMoveStringLiteralDfa6_2(active0, 0L, active1, 0L, active2, 0x80000000L, active3, 0L);
      case 117:
         return jjMoveStringLiteralDfa6_2(active0, 0L, active1, 0L, active2, 0x20000000L, active3, 0L);
      case 118:
         if ((active2 & 0x20000L) != 0L)
            return jjStopAtPos(5, 145);
         break;
      default :
         break;
   }
   return jjStartNfa_2(4, active0, active1, active2, active3);
}
private final int jjMoveStringLiteralDfa6_2(long old0, long active0, long old1, long active1, long old2, long active2, long old3, long active3)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2) | (active3 &= old3)) == 0L)
      return jjStartNfa_2(4, old0, old1, old2, old3); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(5, active0, active1, active2, 0L);
      return 6;
   }
   switch(curChar)
   {
      case 67:
         return jjMoveStringLiteralDfa7_2(active0, 0x4000000000000L, active1, 0L, active2, 0L);
      case 68:
         if ((active1 & 0x80L) != 0L)
            return jjStartNfaWithStates_2(6, 71, 527);
         else if ((active1 & 0x1000000000000000L) != 0L)
            return jjStartNfaWithStates_2(6, 124, 527);
         break;
      case 69:
         if ((active1 & 0x1000L) != 0L)
            return jjStopAtPos(6, 76);
         return jjMoveStringLiteralDfa7_2(active0, 0L, active1, 0x80000L, active2, 0L);
      case 71:
         return jjMoveStringLiteralDfa7_2(active0, 0L, active1, 0x2000000000000000L, active2, 0L);
      case 73:
         return jjMoveStringLiteralDfa7_2(active0, 0L, active1, 0x4000L, active2, 0L);
      case 77:
         if ((active1 & 0x4L) != 0L)
            return jjStartNfaWithStates_2(6, 66, 527);
         return jjMoveStringLiteralDfa7_2(active0, 0x8000000000L, active1, 0L, active2, 0L);
      case 83:
         if ((active0 & 0x800000000000L) != 0L)
            return jjStartNfaWithStates_2(6, 47, 527);
         else if ((active1 & 0x40L) != 0L)
            return jjStartNfaWithStates_2(6, 70, 527);
         else if ((active1 & 0x40000L) != 0L)
            return jjStartNfaWithStates_2(6, 82, 528);
         break;
      case 104:
         if ((active2 & 0x80000000L) != 0L)
            return jjStopAtPos(6, 159);
         break;
      case 115:
         if ((active2 & 0x20000000L) != 0L)
            return jjStopAtPos(6, 157);
         else if ((active2 & 0x100000000L) != 0L)
            return jjStopAtPos(6, 160);
         return jjMoveStringLiteralDfa7_2(active0, 0L, active1, 0L, active2, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_2(5, active0, active1, active2, 0L);
}
private final int jjMoveStringLiteralDfa7_2(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_2(5, old0, old1, old2, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(6, active0, active1, active2, 0L);
      return 7;
   }
   switch(curChar)
   {
      case 69:
         if ((active0 & 0x8000000000L) != 0L)
            return jjStopAtPos(7, 39);
         else if ((active0 & 0x4000000000000L) != 0L)
            return jjStartNfaWithStates_2(7, 50, 527);
         return jjMoveStringLiteralDfa8_2(active0, 0L, active1, 0x2000000000000000L, active2, 0L);
      case 83:
         if ((active1 & 0x80000L) != 0L)
            return jjStartNfaWithStates_2(7, 83, 528);
         break;
      case 86:
         return jjMoveStringLiteralDfa8_2(active0, 0L, active1, 0x4000L, active2, 0L);
      case 101:
         return jjMoveStringLiteralDfa8_2(active0, 0L, active1, 0L, active2, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_2(6, active0, active1, active2, 0L);
}
private final int jjMoveStringLiteralDfa8_2(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_2(6, old0, old1, old2, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(7, 0L, active1, active2, 0L);
      return 8;
   }
   switch(curChar)
   {
      case 68:
         if ((active1 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_2(8, 125, 527);
         break;
      case 69:
         if ((active1 & 0x4000L) != 0L)
            return jjStartNfaWithStates_2(8, 78, 527);
         break;
      case 99:
         return jjMoveStringLiteralDfa9_2(active1, 0L, active2, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_2(7, 0L, active1, active2, 0L);
}
private final int jjMoveStringLiteralDfa9_2(long old1, long active1, long old2, long active2)
{
   if (((active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_2(7, 0L, old1, old2, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(8, 0L, 0L, active2, 0L);
      return 9;
   }
   switch(curChar)
   {
      case 116:
         if ((active2 & 0x200000L) != 0L)
            return jjStopAtPos(9, 149);
         break;
      default :
         break;
   }
   return jjStartNfa_2(8, 0L, 0L, active2, 0L);
}
static final long[] jjbitVec0 = {
   0x8L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec1 = {
   0x1L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec2 = {
   0x0L, 0x10000000L, 0x0L, 0x0L
};
static final long[] jjbitVec3 = {
   0x0L, 0x0L, 0x0L, 0x10000000000L
};
static final long[] jjbitVec4 = {
   0x0L, 0x0L, 0x0L, 0x20000000000L
};
static final long[] jjbitVec5 = {
   0x0L, 0x0L, 0x40000L, 0x0L
};
static final long[] jjbitVec6 = {
   0x0L, 0x0L, 0x10000L, 0x0L
};
static final long[] jjbitVec7 = {
   0x0L, 0x0L, 0x4000000000L, 0x0L
};
static final long[] jjbitVec8 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec10 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec11 = {
   0x4000000000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec12 = {
   0x0L, 0x0L, 0x100000000000L, 0x0L
};
static final long[] jjbitVec13 = {
   0x0L, 0x0L, 0x200000000L, 0x0L
};
static final long[] jjbitVec14 = {
   0x0L, 0x0L, 0x0L, 0x80L
};
static final long[] jjbitVec15 = {
   0x8000000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec16 = {
   0x0L, 0x100000000L, 0x0L, 0x0L
};
static final long[] jjbitVec17 = {
   0x10000000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec18 = {
   0x0L, 0x100L, 0x0L, 0x0L
};
static final long[] jjbitVec19 = {
   0x0L, 0x2000L, 0x0L, 0x0L
};
static final long[] jjbitVec20 = {
   0x0L, 0x0L, 0x0L, 0x800000000000L
};
static final long[] jjbitVec21 = {
   0x400000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec22 = {
   0x20000000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec23 = {
   0x0L, 0x0L, 0x0L, 0x20L
};
static final long[] jjbitVec24 = {
   0x0L, 0x20L, 0x0L, 0x0L
};
static final long[] jjbitVec25 = {
   0x40000000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec26 = {
   0x0L, 0x0L, 0x0L, 0x80000000000000L
};
static final long[] jjbitVec27 = {
   0x0L, 0x10000L, 0x0L, 0x0L
};
static final long[] jjbitVec28 = {
   0x0L, 0x80000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec29 = {
   0x100L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec30 = {
   0x0L, 0x40000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec31 = {
   0x0L, 0x0L, 0x0L, 0x800L
};
static final long[] jjbitVec32 = {
   0x0L, 0x400000000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec33 = {
   0x0L, 0x1000000000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec34 = {
   0x20000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec35 = {
   0x0L, 0x40000000L, 0x0L, 0x0L
};
static final long[] jjbitVec36 = {
   0x0L, 0x8L, 0x0L, 0x0L
};
static final long[] jjbitVec37 = {
   0x0L, 0x0L, 0x80000L, 0x0L
};
static final long[] jjbitVec38 = {
   0x0L, 0x0L, 0x100000L, 0x0L
};
static final long[] jjbitVec39 = {
   0x0L, 0x0L, 0x8000L, 0x0L
};
static final long[] jjbitVec40 = {
   0x0L, 0x0L, 0x20000L, 0x0L
};
static final long[] jjbitVec41 = {
   0x0L, 0x0L, 0x0L, 0x40L
};
static final long[] jjbitVec42 = {
   0x0L, 0x0L, 0x4L, 0x0L
};
static final long[] jjbitVec43 = {
   0x0L, 0x0L, 0x40L, 0x0L
};
static final long[] jjbitVec44 = {
   0x0L, 0x800000000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec45 = {
   0x0L, 0x2000000000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec46 = {
   0x0L, 0x0L, 0x8L, 0x0L
};
static final long[] jjbitVec47 = {
   0x0L, 0x0L, 0x80L, 0x0L
};
static final long[] jjbitVec48 = {
   0x0L, 0x0L, 0x4000L, 0x0L
};
static final long[] jjbitVec49 = {
   0x0L, 0x1L, 0x0L, 0x0L
};
static final long[] jjbitVec50 = {
   0x0L, 0x0L, 0x20000000L, 0x0L
};
static final long[] jjbitVec51 = {
   0x0L, 0x0L, 0x0L, 0x40000L
};
static final long[] jjbitVec52 = {
   0x0L, 0x0L, 0x0L, 0x1000000000L
};
static final long[] jjbitVec53 = {
   0x0L, 0x0L, 0x800000000L, 0x0L
};
static final long[] jjbitVec54 = {
   0x0L, 0x800000000L, 0x0L, 0x0L
};
static final long[] jjbitVec55 = {
   0x0L, 0x1000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec56 = {
   0x0L, 0x2000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec57 = {
   0x400000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec58 = {
   0x0L, 0x0L, 0x400000000L, 0x0L
};
static final long[] jjbitVec59 = {
   0x0L, 0x0L, 0x10000000000L, 0x0L
};
static final long[] jjbitVec60 = {
   0x0L, 0x0L, 0x200000L, 0x0L
};
static final long[] jjbitVec61 = {
   0x0L, 0x0L, 0x400000L, 0x0L
};
static final long[] jjbitVec62 = {
   0x0L, 0x0L, 0x2000000L, 0x0L
};
static final long[] jjbitVec63 = {
   0x0L, 0x0L, 0x1000000L, 0x0L
};
static final long[] jjbitVec64 = {
   0x0L, 0x0L, 0x800000L, 0x0L
};
static final long[] jjbitVec65 = {
   0x200L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec66 = {
   0x0L, 0x0L, 0x0L, 0x800000L
};
private final int jjMoveNfa_2(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 526;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 152:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 457;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 454;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  break;
               case 519:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 457;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 454;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 457;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 454;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  break;
               case 193:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 457;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 454;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  break;
               case 167:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 169;
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 457;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 454;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  break;
               case 153:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 457;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 454;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  break;
               case 211:
                  if (curChar == 47 && kind > 133)
                     kind = 133;
                  break;
               case 517:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 457;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 454;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 110)
                        kind = 110;
                     jjCheckNAddStates(37, 45);
                  }
                  else if (curChar == 60)
                     jjCheckNAddStates(46, 53);
                  else if (curChar == 40)
                     jjAddStates(54, 60);
                  else if (curChar == 47)
                     jjAddStates(61, 62);
                  else if (curChar == 62)
                     jjAddStates(63, 65);
                  else if (curChar == 61)
                     jjAddStates(66, 69);
                  else if (curChar == 45)
                     jjAddStates(70, 74);
                  else if (curChar == 39)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  else if (curChar == 34)
                     jjCheckNAddStates(75, 78);
                  if (curChar == 60)
                     jjAddStates(79, 83);
                  else if (curChar == 48)
                  {
                     if (kind > 110)
                        kind = 110;
                  }
                  break;
               case 409:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(493, 494);
                  else if ((0xc0000000000L & l) != 0L)
                     jjCheckNAdd(494);
                  else if (curChar == 61)
                  {
                     if (kind > 201)
                        kind = 201;
                  }
                  else if (curChar == 62)
                  {
                     if (kind > 123)
                        kind = 123;
                  }
                  else if (curChar == 45)
                  {
                     if (kind > 108)
                        kind = 108;
                  }
                  else if (curChar == 60)
                  {
                     if (kind > 103)
                        kind = 103;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(490, 491);
                  else if ((0xc0000000000L & l) != 0L)
                     jjCheckNAdd(491);
                  else if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 412;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(485, 486);
                  else if ((0xc0000000000L & l) != 0L)
                     jjCheckNAdd(486);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(479, 480);
                  else if ((0xc0000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 483;
                  break;
               case 506:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 457;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 454;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  break;
               case 168:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 176;
                  else if (curChar == 62)
                  {
                     if (kind > 107)
                        kind = 107;
                  }
                  else if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 171;
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 457;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 454;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  break;
               case 154:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 457;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 454;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  break;
               case 416:
                  if (curChar == 61)
                  {
                     if (kind > 203)
                        kind = 203;
                  }
                  else if (curChar == 62)
                  {
                     if (kind > 105)
                        kind = 105;
                  }
                  if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 182:
                  if (curChar == 62)
                  {
                     if (kind > 183)
                        kind = 183;
                  }
                  else if (curChar == 61)
                  {
                     if (kind > 92)
                        kind = 92;
                  }
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 528:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(451);
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 448;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(447, 449);
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 444;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(443, 445);
                  break;
               case 461:
                  if (curChar == 61 && kind > 131)
                     kind = 131;
                  break;
               case 527:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 457;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 454;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  break;
               case 421:
                  if (curChar == 61)
                  {
                     if (kind > 210)
                        kind = 210;
                  }
                  else if (curChar == 45)
                  {
                     if (kind > 209)
                        kind = 209;
                  }
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 420;
                  break;
               case 518:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 457;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 454;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  break;
               case 10:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 457;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 454;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  break;
               case 16:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 457;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 454;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  break;
               case 465:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 473;
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 471;
                  else if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 469;
                  else if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 467;
                  else if (curChar == 42)
                  {
                     if (kind > 26)
                        kind = 26;
                  }
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 464;
                  break;
               case 442:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(451);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(447, 449);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(443, 445);
                  break;
               case 520:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 457;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 454;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  break;
               case 142:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 457;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 454;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  break;
               case 526:
               case 103:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(103, 104);
                  break;
               case 30:
                  if (curChar == 48 && kind > 110)
                     kind = 110;
                  break;
               case 31:
               case 37:
                  if (curChar == 34)
                     jjCheckNAddStates(75, 78);
                  break;
               case 32:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     jjCheckNAddStates(75, 78);
                  break;
               case 34:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjAddStates(84, 85);
                  break;
               case 35:
                  if (curChar == 39)
                     jjCheckNAddStates(75, 78);
                  break;
               case 38:
                  if (curChar == 34 && kind > 111)
                     kind = 111;
                  break;
               case 39:
                  if (curChar == 39 && kind > 114)
                     kind = 114;
                  break;
               case 82:
                  if (curChar == 62 && kind > 182)
                     kind = 182;
                  break;
               case 105:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
               case 108:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(108);
                  break;
               case 114:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 116:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 118:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 157:
                  if (curChar == 45)
                     jjAddStates(70, 74);
                  break;
               case 158:
               case 159:
                  if (curChar == 45)
                     jjCheckNAddStates(86, 88);
                  break;
               case 160:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(160, 166);
                  break;
               case 169:
               case 170:
                  if (curChar != 45)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(170);
                  break;
               case 171:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 172:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 173:
                  if (curChar == 62 && kind > 107)
                     kind = 107;
                  break;
               case 175:
                  if (curChar == 62 && kind > 193)
                     kind = 193;
                  break;
               case 176:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if (curChar == 61)
                     jjAddStates(66, 69);
                  break;
               case 179:
               case 180:
                  if (curChar != 61)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAdd(180);
                  break;
               case 181:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 183:
                  if (curChar == 61 && kind > 92)
                     kind = 92;
                  break;
               case 184:
                  if (curChar == 62 && kind > 183)
                     kind = 183;
                  break;
               case 408:
                  if (curChar == 60)
                     jjAddStates(79, 83);
                  break;
               case 410:
                  if (curChar == 45 && kind > 108)
                     kind = 108;
                  break;
               case 411:
                  if (curChar == 62 && kind > 123)
                     kind = 123;
                  break;
               case 412:
                  if (curChar == 62 && kind > 199)
                     kind = 199;
                  break;
               case 413:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 414:
                  if (curChar == 61 && kind > 201)
                     kind = 201;
                  break;
               case 415:
                  if (curChar == 62)
                     jjAddStates(63, 65);
                  break;
               case 417:
                  if (curChar == 62 && kind > 105)
                     kind = 105;
                  break;
               case 418:
                  if (curChar == 61 && kind > 203)
                     kind = 203;
                  break;
               case 420:
                  if (curChar == 62 && kind > 109)
                     kind = 109;
                  break;
               case 423:
                  if (curChar == 45 && kind > 209)
                     kind = 209;
                  break;
               case 424:
                  if (curChar == 61 && kind > 210)
                     kind = 210;
                  break;
               case 425:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAddStates(37, 45);
                  break;
               case 426:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAdd(426);
                  break;
               case 427:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(427, 430);
                  break;
               case 429:
               case 444:
               case 454:
                  if (curChar == 47)
                     jjCheckNAdd(428);
                  break;
               case 430:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 429;
                  break;
               case 431:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(431, 434);
                  break;
               case 432:
                  if (curChar == 47 && kind > 113)
                     kind = 113;
                  break;
               case 434:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 433;
                  break;
               case 435:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(435, 436);
                  break;
               case 437:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjstateSet[jjnewStateCnt++] = 437;
                  break;
               case 438:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(438, 439);
                  break;
               case 440:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 443:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(443, 445);
                  break;
               case 445:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 444;
                  break;
               case 446:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(447, 449);
                  break;
               case 447:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(447, 449);
                  break;
               case 449:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 448;
                  break;
               case 450:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(451);
                  break;
               case 451:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(451);
                  break;
               case 453:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  break;
               case 455:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 454;
                  break;
               case 456:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  break;
               case 458:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 457;
                  break;
               case 459:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(459);
                  break;
               case 460:
                  if (curChar == 47)
                     jjAddStates(61, 62);
                  break;
               case 463:
                  if (curChar == 40)
                     jjAddStates(54, 60);
                  break;
               case 464:
                  if (curChar == 46 && kind > 26)
                     kind = 26;
                  break;
               case 466:
                  if (curChar == 42 && kind > 26)
                     kind = 26;
                  break;
               case 467:
                  if (curChar == 41 && kind > 223)
                     kind = 223;
                  break;
               case 468:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 467;
                  break;
               case 469:
                  if (curChar == 41 && kind > 224)
                     kind = 224;
                  break;
               case 470:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 469;
                  break;
               case 471:
                  if (curChar == 41 && kind > 225)
                     kind = 225;
                  break;
               case 472:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 471;
                  break;
               case 473:
                  if (curChar == 41 && kind > 226)
                     kind = 226;
                  break;
               case 474:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 473;
                  break;
               case 475:
                  if (curChar == 41 && kind > 227)
                     kind = 227;
                  break;
               case 478:
                  if (curChar == 60)
                     jjCheckNAddStates(46, 53);
                  break;
               case 479:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(479, 480);
                  break;
               case 480:
                  if (curChar == 62)
                     jjCheckNAdd(481);
                  break;
               case 481:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 232)
                     kind = 232;
                  jjCheckNAdd(481);
                  break;
               case 482:
                  if ((0xc0000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 483;
                  break;
               case 483:
                  if (curChar == 62)
                     jjCheckNAdd(484);
                  break;
               case 484:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 233)
                     kind = 233;
                  jjCheckNAdd(484);
                  break;
               case 485:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(485, 486);
                  break;
               case 486:
                  if (curChar == 62)
                     jjCheckNAdd(487);
                  break;
               case 487:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(487, 488);
                  break;
               case 488:
                  if (curChar != 46)
                     break;
                  if (kind > 234)
                     kind = 234;
                  jjCheckNAdd(488);
                  break;
               case 489:
                  if ((0xc0000000000L & l) != 0L)
                     jjCheckNAdd(486);
                  break;
               case 490:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(490, 491);
                  break;
               case 491:
                  if (curChar == 62 && kind > 235)
                     kind = 235;
                  break;
               case 492:
                  if ((0xc0000000000L & l) != 0L)
                     jjCheckNAdd(491);
                  break;
               case 493:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(493, 494);
                  break;
               case 494:
                  if (curChar == 62)
                     jjCheckNAddStates(89, 91);
                  break;
               case 495:
                  if (curChar != 42)
                     break;
                  if (kind > 236)
                     kind = 236;
                  jjCheckNAdd(496);
                  break;
               case 496:
                  if (curChar != 46)
                     break;
                  if (kind > 236)
                     kind = 236;
                  jjCheckNAdd(496);
                  break;
               case 497:
                  if (curChar != 45)
                     break;
                  if (kind > 236)
                     kind = 236;
                  jjCheckNAdd(498);
                  break;
               case 498:
                  if (curChar != 46)
                     break;
                  if (kind > 236)
                     kind = 236;
                  jjCheckNAdd(498);
                  break;
               case 499:
                  if (curChar != 46)
                     break;
                  if (kind > 236)
                     kind = 236;
                  jjCheckNAdd(499);
                  break;
               case 500:
                  if ((0xc0000000000L & l) != 0L)
                     jjCheckNAdd(494);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 152:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 154;
                  if (curChar == 70)
                  {
                     if (kind > 65)
                        kind = 65;
                  }
                  break;
               case 519:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 518;
                  break;
               case 11:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 193:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 208;
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 200;
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 255:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 265;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 262;
                  else if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 258;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 9:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 153:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 155;
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 211:
                  if ((0x10000000100L & l) != 0L)
                     jjCheckNAdd(118);
                  else if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 114;
                  else if (curChar == 88)
                  {
                     if (kind > 230)
                        kind = 230;
                  }
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 405;
                  else if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 400;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 398;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 393;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 297;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 280;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 274;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 266;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 239;
                  else if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 227;
                  else if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 225;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 223;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 216;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 385;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 291;
                  else if (curChar == 111)
                  {
                     if (kind > 155)
                        kind = 155;
                  }
                  else if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 269;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 263;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 252;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 234;
                  else if (curChar == 65)
                  {
                     if (kind > 48)
                        kind = 48;
                  }
                  else if (curChar == 69)
                  {
                     if (kind > 46)
                        kind = 46;
                  }
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 379;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 285;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 259;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 246;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 373;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 255;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 369;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 361;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 355;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 351;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 341;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 331;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 323;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 315;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 310;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 305;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 300;
                  break;
               case 517:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 516;
                  break;
               case 0:
                  if ((0x7fffffe0777fffeL & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAddStates(92, 96);
                  }
                  else if ((0x880000L & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjAddStates(97, 99);
                  }
                  else if (curChar == 124)
                     jjAddStates(100, 103);
                  else if (curChar == 92)
                     jjAddStates(104, 146);
                  else if (curChar == 64)
                  {
                     if (kind > 231)
                        kind = 231;
                  }
                  else if (curChar == 95)
                     jjCheckNAddTwoStates(103, 104);
                  else if (curChar == 126)
                     jjstateSet[jjnewStateCnt++] = 82;
                  else if (curChar == 91)
                     jjstateSet[jjnewStateCnt++] = 41;
                  if (curChar == 65)
                     jjAddStates(147, 150);
                  else if (curChar == 67)
                     jjAddStates(151, 153);
                  else if (curChar == 68)
                     jjAddStates(154, 155);
                  else if (curChar == 84)
                     jjAddStates(156, 157);
                  else if (curChar == 86)
                     jjAddStates(158, 159);
                  else if (curChar == 92)
                     jjAddStates(160, 162);
                  else if (curChar == 83)
                     jjCheckNAdd(106);
                  else if (curChar == 87)
                     jjCheckNAdd(106);
                  else if (curChar == 126)
                  {
                     if (kind > 121)
                        kind = 121;
                  }
                  else if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 16;
                  else if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 506:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  if (curChar == 88)
                     jjstateSet[jjnewStateCnt++] = 524;
                  else if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 520;
                  else if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 511;
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 505;
                  break;
               case 168:
                  if (curChar == 124 && kind > 192)
                     kind = 192;
                  break;
               case 15:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  if (curChar == 77)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 154:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  if (curChar == 83)
                  {
                     if (kind > 65)
                        kind = 65;
                  }
                  break;
               case 182:
                  if (curChar == 124 && kind > 185)
                     kind = 185;
                  break;
               case 528:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(451);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(447, 449);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(443, 445);
                  break;
               case 461:
                  if (curChar == 92 && kind > 130)
                     kind = 130;
                  break;
               case 527:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  break;
               case 421:
                  if (curChar == 124 && kind > 207)
                     kind = 207;
                  break;
               case 518:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  if (curChar == 77)
                     jjstateSet[jjnewStateCnt++] = 517;
                  break;
               case 10:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 16:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 465:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 476;
                  break;
               case 442:
                  if ((0x7fffffe87ffffbeL & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(451);
                  }
                  else if (curChar == 70)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjstateSet[jjnewStateCnt++] = 107;
                  }
                  if ((0x7fffffe07ffffbeL & l) != 0L)
                     jjCheckNAddTwoStates(447, 449);
                  if ((0x7fffffe07ffffbeL & l) != 0L)
                     jjCheckNAddTwoStates(443, 445);
                  break;
               case 520:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 519;
                  break;
               case 142:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(459);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 149;
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 526:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(103, 104);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 231)
                        kind = 231;
                     jjCheckNAdd(105);
                  }
                  break;
               case 2:
                  if (curChar == 78 && kind > 57)
                     kind = 57;
                  break;
               case 3:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 4:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 5:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 6:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 12:
                  if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 65 && kind > 57)
                     kind = 57;
                  break;
               case 14:
                  if (curChar == 77)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 17:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 24:
                  if (curChar == 95 && kind > 104)
                     kind = 104;
                  break;
               case 32:
                  if ((0xfffffffeefffffffL & l) != 0L)
                     jjCheckNAddStates(75, 78);
                  break;
               case 33:
                  if (curChar == 96)
                     jjCheckNAddTwoStates(34, 35);
                  break;
               case 34:
                  jjCheckNAddTwoStates(34, 35);
                  break;
               case 36:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 37:
                  if ((0x14404010000000L & l) != 0L)
                     jjCheckNAddStates(75, 78);
                  break;
               case 40:
                  if (curChar == 126 && kind > 121)
                     kind = 121;
                  break;
               case 41:
                  if (curChar == 93 && kind > 122)
                     kind = 122;
                  break;
               case 42:
                  if (curChar == 91)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 83:
                  if (curChar == 126)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 102:
                  if (curChar == 95)
                     jjCheckNAddTwoStates(103, 104);
                  break;
               case 103:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(103, 104);
                  break;
               case 104:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(105);
                  break;
               case 105:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(105);
                  break;
               case 106:
                  if (curChar != 70)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 107:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(108);
                  break;
               case 108:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(108);
                  break;
               case 109:
                  if (curChar == 87)
                     jjCheckNAdd(106);
                  break;
               case 110:
                  if (curChar == 83)
                     jjCheckNAdd(106);
                  break;
               case 111:
                  if (curChar == 64 && kind > 231)
                     kind = 231;
                  break;
               case 112:
                  if (curChar == 92)
                     jjAddStates(160, 162);
                  break;
               case 113:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 115:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 117:
                  if ((0x10000000100L & l) != 0L)
                     jjCheckNAdd(118);
                  break;
               case 118:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAdd(118);
                  break;
               case 119:
                  if (curChar == 86)
                     jjAddStates(158, 159);
                  break;
               case 120:
                  if (curChar == 69 && kind > 84)
                     kind = 84;
                  break;
               case 121:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 122:
                  if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 123:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 124:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 127:
                  if (curChar == 83 && kind > 84)
                     kind = 84;
                  break;
               case 128:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 129:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 130:
                  if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 131:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 133:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 134:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if (curChar == 84)
                     jjAddStates(156, 157);
                  break;
               case 136:
                  if (curChar == 76 && kind > 80)
                     kind = 80;
                  break;
               case 137:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 138:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 140:
                  if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 141:
                  if (curChar == 77)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 143:
                  if (curChar == 83 && kind > 80)
                     kind = 80;
                  break;
               case 144:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 145:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 146:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 147:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 148:
                  if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 149:
                  if (curChar == 77)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 150:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 151:
                  if (curChar == 68)
                     jjAddStates(154, 155);
                  break;
               case 155:
                  if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 161:
                  if (curChar == 69 && kind > 34)
                     kind = 34;
                  break;
               case 162:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 165:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 166:
                  if (curChar == 77)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 186:
                  if (curChar == 67)
                     jjAddStates(151, 153);
                  break;
               case 187:
                  if (curChar == 84 && kind > 43)
                     kind = 43;
                  break;
               case 188:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 191:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 192:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 194:
                  if (curChar == 83 && kind > 43)
                     kind = 43;
                  break;
               case 195:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 196:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 197:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 198:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 200:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 201:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 202:
                  if (curChar == 89 && kind > 57)
                     kind = 57;
                  break;
               case 203:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 204:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 205:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 206:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 207:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 208:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 209:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 210:
                  if (curChar == 92)
                     jjAddStates(104, 146);
                  break;
               case 212:
                  if (curChar == 115 && kind > 46)
                     kind = 46;
                  break;
               case 213:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 214:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 215:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 216:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 217:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 218:
                  if (curChar == 65 && kind > 48)
                     kind = 48;
                  break;
               case 219:
                  if (curChar == 108 && kind > 48)
                     kind = 48;
                  break;
               case 220:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 221:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 222:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 223:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 224:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 225:
                  if (curChar == 69 && kind > 59)
                     kind = 59;
                  break;
               case 226:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 227:
                  if (curChar == 65 && kind > 60)
                     kind = 60;
                  break;
               case 228:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 230:
                  if (curChar == 120 && kind > 134)
                     kind = 134;
                  break;
               case 231:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 232:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 233:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 234:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 235:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 236:
                  if (curChar == 112 && kind > 135)
                     kind = 135;
                  break;
               case 237:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 238:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 239:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 240:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 241:
                  if (curChar == 99 && kind > 136)
                     kind = 136;
                  break;
               case 242:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 243:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 244:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 245:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 246:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 247:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 248:
                  if (curChar == 116 && kind > 137)
                     kind = 137;
                  break;
               case 249:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 250:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 251:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 252:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 253:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 254:
                  if (curChar == 112 && kind > 138)
                     kind = 138;
                  break;
               case 256:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 257:
                  if (curChar == 116 && kind > 139)
                     kind = 139;
                  break;
               case 258:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 259:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 260:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 261:
                  if (curChar == 103 && kind > 141)
                     kind = 141;
                  break;
               case 262:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 263:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 264:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 265:
                  if (curChar == 112 && kind > 142)
                     kind = 142;
                  break;
               case 266:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 267:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 268:
                  if (curChar == 118 && kind > 143)
                     kind = 143;
                  break;
               case 269:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 270:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 271:
                  if (curChar == 113 && kind > 144)
                     kind = 144;
                  break;
               case 272:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 273:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 274:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 275:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 276:
                  if (curChar == 103 && kind > 147)
                     kind = 147;
                  break;
               case 277:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 278:
                  if (curChar == 110 && kind > 148)
                     kind = 148;
                  break;
               case 279:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 280:
                  if (curChar == 108 && kind > 153)
                     kind = 153;
                  break;
               case 281:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 282:
                  if (curChar == 111 && kind > 155)
                     kind = 155;
                  break;
               case 283:
                  if (curChar == 99 && kind > 161)
                     kind = 161;
                  break;
               case 284:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 285:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 286:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 287:
                  if (curChar == 113 && kind > 162)
                     kind = 162;
                  break;
               case 288:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 289:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 290:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 291:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 292:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 293:
                  if (curChar == 111 && kind > 163)
                     kind = 163;
                  break;
               case 294:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 295:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 296:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 297:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 298:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 299:
                  if (curChar == 109 && kind > 164)
                     kind = 164;
                  break;
               case 300:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 301:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 300;
                  break;
               case 302:
                  if (curChar == 113 && kind > 165)
                     kind = 165;
                  break;
               case 303:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 304:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 305:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 306:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 307:
                  if (curChar == 112 && kind > 166)
                     kind = 166;
                  break;
               case 308:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 309:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 310:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 311:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 312:
                  if (curChar == 112 && kind > 167)
                     kind = 167;
                  break;
               case 313:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 314:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 315:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 316:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 315;
                  break;
               case 317:
                  if (curChar == 116 && kind > 168)
                     kind = 168;
                  break;
               case 318:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 317;
                  break;
               case 319:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 318;
                  break;
               case 320:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 321:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 322:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 323:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 324:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 325:
                  if (curChar == 116 && kind > 169)
                     kind = 169;
                  break;
               case 326:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 327:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 328:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 327;
                  break;
               case 329:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 328;
                  break;
               case 330:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 331:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 332:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 333:
                  if (curChar == 113 && kind > 170)
                     kind = 170;
                  break;
               case 334:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 335:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 336:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 337:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 338:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 337;
                  break;
               case 339:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 340:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 341:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 342:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 343:
                  if (curChar == 113 && kind > 171)
                     kind = 171;
                  break;
               case 344:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 345:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 346:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 347:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 346;
                  break;
               case 348:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 349:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 350:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 351:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 352:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 351;
                  break;
               case 353:
                  if (curChar == 114 && kind > 172)
                     kind = 172;
                  break;
               case 354:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 355:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 356:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 355;
                  break;
               case 357:
                  if (curChar == 116 && kind > 173)
                     kind = 173;
                  break;
               case 358:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 359:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 360:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 359;
                  break;
               case 361:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 360;
                  break;
               case 362:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 363:
                  if (curChar == 113 && kind > 174)
                     kind = 174;
                  break;
               case 364:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 363;
                  break;
               case 365:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 364;
                  break;
               case 366:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 365;
                  break;
               case 367:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 366;
                  break;
               case 368:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 369:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 370:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 369;
                  break;
               case 371:
                  if (curChar == 99 && kind > 175)
                     kind = 175;
                  break;
               case 372:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 373:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 372;
                  break;
               case 374:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 373;
                  break;
               case 375:
                  if (curChar == 113 && kind > 176)
                     kind = 176;
                  break;
               case 376:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 375;
                  break;
               case 377:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 376;
                  break;
               case 378:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 377;
                  break;
               case 379:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 378;
                  break;
               case 380:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 379;
                  break;
               case 381:
                  if (curChar == 116 && kind > 177)
                     kind = 177;
                  break;
               case 382:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 381;
                  break;
               case 383:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 382;
                  break;
               case 384:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 383;
                  break;
               case 385:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 384;
                  break;
               case 386:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 385;
                  break;
               case 387:
                  if (curChar == 113 && kind > 178)
                     kind = 178;
                  break;
               case 388:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 387;
                  break;
               case 389:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 388;
                  break;
               case 390:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 389;
                  break;
               case 391:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 390;
                  break;
               case 392:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 391;
                  break;
               case 393:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 392;
                  break;
               case 394:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 393;
                  break;
               case 395:
                  if (curChar == 115 && kind > 179)
                     kind = 179;
                  break;
               case 396:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 397:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 396;
                  break;
               case 398:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 397;
                  break;
               case 399:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 398;
                  break;
               case 400:
                  if (curChar == 114 && kind > 180)
                     kind = 180;
                  break;
               case 401:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 400;
                  break;
               case 402:
                  if (curChar == 110 && kind > 228)
                     kind = 228;
                  break;
               case 403:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 402;
                  break;
               case 404:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 403;
                  break;
               case 405:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 404;
                  break;
               case 406:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 405;
                  break;
               case 407:
                  if (curChar == 88 && kind > 230)
                     kind = 230;
                  break;
               case 419:
                  if (curChar == 124)
                     jjAddStates(100, 103);
                  break;
               case 427:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjAddStates(163, 164);
                  break;
               case 428:
                  if (curChar == 92 && kind > 112)
                     kind = 112;
                  break;
               case 431:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjAddStates(165, 166);
                  break;
               case 433:
               case 448:
               case 457:
                  if (curChar == 92)
                     jjCheckNAdd(432);
                  break;
               case 435:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(167, 168);
                  break;
               case 436:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(437);
                  break;
               case 437:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(437);
                  break;
               case 439:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(440);
                  break;
               case 440:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(440);
                  break;
               case 441:
                  if ((0x880000L & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjAddStates(97, 99);
                  break;
               case 443:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(443, 445);
                  break;
               case 446:
                  if ((0x7fffffe07ffffbeL & l) != 0L)
                     jjCheckNAddTwoStates(447, 449);
                  break;
               case 447:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(447, 449);
                  break;
               case 450:
                  if ((0x7fffffe87ffffbeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(451);
                  break;
               case 451:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(451);
                  break;
               case 452:
                  if ((0x7fffffe0777fffeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAddStates(92, 96);
                  break;
               case 453:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  break;
               case 456:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  break;
               case 459:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjCheckNAdd(459);
                  break;
               case 476:
                  if (curChar == 88)
                     jjstateSet[jjnewStateCnt++] = 475;
                  break;
               case 481:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 232)
                     kind = 232;
                  jjstateSet[jjnewStateCnt++] = 481;
                  break;
               case 484:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 233)
                     kind = 233;
                  jjstateSet[jjnewStateCnt++] = 484;
                  break;
               case 487:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(169, 170);
                  break;
               case 501:
                  if (curChar == 65)
                     jjAddStates(147, 150);
                  break;
               case 502:
                  if (curChar == 78 && kind > 37)
                     kind = 37;
                  break;
               case 503:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 502;
                  break;
               case 504:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 503;
                  break;
               case 505:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 504;
                  break;
               case 507:
                  if (curChar == 83 && kind > 37)
                     kind = 37;
                  break;
               case 508:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 507;
                  break;
               case 509:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 508;
                  break;
               case 510:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 509;
                  break;
               case 511:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 510;
                  break;
               case 512:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 511;
                  break;
               case 513:
                  if (curChar == 78 && kind > 40)
                     kind = 40;
                  break;
               case 514:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 513;
                  break;
               case 515:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 514;
                  break;
               case 516:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 515;
                  break;
               case 521:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 520;
                  break;
               case 522:
                  if (curChar == 77 && kind > 40)
                     kind = 40;
                  break;
               case 523:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 522;
                  break;
               case 524:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 523;
                  break;
               case 525:
                  if (curChar == 88)
                     jjstateSet[jjnewStateCnt++] = 524;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 46)
                        kind = 46;
                  }
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 48)
                        kind = 48;
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 18;
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 20;
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 92)
                        kind = 92;
                  }
                  if (jjCanMove_3(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 103)
                        kind = 103;
                  }
                  if (jjCanMove_4(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 24;
                  if (jjCanMove_4(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 105)
                        kind = 105;
                  }
                  if (jjCanMove_5(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 107)
                        kind = 107;
                  }
                  if (jjCanMove_6(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 108)
                        kind = 108;
                  }
                  if (jjCanMove_7(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 109)
                        kind = 109;
                  }
                  if (jjCanMove_9(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  if (jjCanMove_10(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 121)
                        kind = 121;
                  }
                  if (jjCanMove_11(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 122)
                        kind = 122;
                  }
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 123)
                        kind = 123;
                  }
                  if (jjCanMove_13(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 130)
                        kind = 130;
                  }
                  if (jjCanMove_14(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 131)
                        kind = 131;
                  }
                  if (jjCanMove_15(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 133)
                        kind = 133;
                  }
                  if (jjCanMove_16(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 134)
                        kind = 134;
                  }
                  if (jjCanMove_17(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 135)
                        kind = 135;
                  }
                  if (jjCanMove_18(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 136)
                        kind = 136;
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 137)
                        kind = 137;
                  }
                  if (jjCanMove_20(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 138)
                        kind = 138;
                  }
                  if (jjCanMove_21(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 139)
                        kind = 139;
                  }
                  if (jjCanMove_22(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 141)
                        kind = 141;
                  }
                  if (jjCanMove_23(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 142)
                        kind = 142;
                  }
                  if (jjCanMove_24(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 143)
                        kind = 143;
                  }
                  if (jjCanMove_25(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 144)
                        kind = 144;
                  }
                  if (jjCanMove_26(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 147)
                        kind = 147;
                  }
                  if (jjCanMove_27(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 148)
                        kind = 148;
                  }
                  if (jjCanMove_28(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 153)
                        kind = 153;
                  }
                  if (jjCanMove_29(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 155)
                        kind = 155;
                  }
                  if (jjCanMove_30(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 161)
                        kind = 161;
                  }
                  if (jjCanMove_31(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 162)
                        kind = 162;
                  }
                  if (jjCanMove_32(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 163)
                        kind = 163;
                  }
                  if (jjCanMove_33(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 164)
                        kind = 164;
                  }
                  if (jjCanMove_34(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 165)
                        kind = 165;
                  }
                  if (jjCanMove_35(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 166)
                        kind = 166;
                  }
                  if (jjCanMove_36(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 167)
                        kind = 167;
                  }
                  if (jjCanMove_37(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 168)
                        kind = 168;
                  }
                  if (jjCanMove_38(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 169)
                        kind = 169;
                  }
                  if (jjCanMove_39(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 170)
                        kind = 170;
                  }
                  if (jjCanMove_40(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 171)
                        kind = 171;
                  }
                  if (jjCanMove_41(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 172)
                        kind = 172;
                  }
                  if (jjCanMove_42(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 173)
                        kind = 173;
                  }
                  if (jjCanMove_43(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 174)
                        kind = 174;
                  }
                  if (jjCanMove_44(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 175)
                        kind = 175;
                  }
                  if (jjCanMove_45(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 176)
                        kind = 176;
                  }
                  if (jjCanMove_46(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 177)
                        kind = 177;
                  }
                  if (jjCanMove_47(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 178)
                        kind = 178;
                  }
                  if (jjCanMove_48(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 179)
                        kind = 179;
                  }
                  if (jjCanMove_49(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 180)
                        kind = 180;
                  }
                  if (jjCanMove_50(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 182)
                        kind = 182;
                  }
                  if (jjCanMove_51(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 183)
                        kind = 183;
                  }
                  if (jjCanMove_52(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 185)
                        kind = 185;
                  }
                  if (jjCanMove_53(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 192)
                        kind = 192;
                  }
                  if (jjCanMove_54(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 193)
                        kind = 193;
                  }
                  if (jjCanMove_55(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 199)
                        kind = 199;
                  }
                  if (jjCanMove_56(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 201)
                        kind = 201;
                  }
                  if (jjCanMove_57(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 203)
                        kind = 203;
                  }
                  if (jjCanMove_58(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 207)
                        kind = 207;
                  }
                  if (jjCanMove_59(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 209)
                        kind = 209;
                  }
                  if (jjCanMove_60(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 210)
                        kind = 210;
                  }
                  if (jjCanMove_61(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 223)
                        kind = 223;
                  }
                  if (jjCanMove_62(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 224)
                        kind = 224;
                  }
                  if (jjCanMove_63(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 225)
                        kind = 225;
                  }
                  if (jjCanMove_64(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 226)
                        kind = 226;
                  }
                  if (jjCanMove_65(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 227)
                        kind = 227;
                  }
                  if (jjCanMove_66(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 228)
                        kind = 228;
                  }
                  if (jjCanMove_67(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 230)
                        kind = 230;
                  }
                  break;
               case 1:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 48)
                     kind = 48;
                  break;
               case 18:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 59)
                     kind = 59;
                  break;
               case 19:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 60)
                     kind = 60;
                  break;
               case 21:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 92)
                     kind = 92;
                  break;
               case 23:
                  if (jjCanMove_3(hiByte, i1, i2, l1, l2) && kind > 103)
                     kind = 103;
                  break;
               case 25:
                  if (jjCanMove_4(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (jjCanMove_4(hiByte, i1, i2, l1, l2) && kind > 105)
                     kind = 105;
                  break;
               case 27:
                  if (jjCanMove_5(hiByte, i1, i2, l1, l2) && kind > 107)
                     kind = 107;
                  break;
               case 28:
                  if (jjCanMove_6(hiByte, i1, i2, l1, l2) && kind > 108)
                     kind = 108;
                  break;
               case 29:
                  if (jjCanMove_7(hiByte, i1, i2, l1, l2) && kind > 109)
                     kind = 109;
                  break;
               case 32:
                  if (jjCanMove_8(hiByte, i1, i2, l1, l2))
                     jjAddStates(75, 78);
                  break;
               case 34:
                  if (jjCanMove_8(hiByte, i1, i2, l1, l2))
                     jjAddStates(84, 85);
                  break;
               case 39:
                  if (jjCanMove_9(hiByte, i1, i2, l1, l2) && kind > 114)
                     kind = 114;
                  break;
               case 40:
                  if (jjCanMove_10(hiByte, i1, i2, l1, l2) && kind > 121)
                     kind = 121;
                  break;
               case 43:
                  if (jjCanMove_11(hiByte, i1, i2, l1, l2) && kind > 122)
                     kind = 122;
                  break;
               case 44:
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2) && kind > 123)
                     kind = 123;
                  break;
               case 45:
                  if (jjCanMove_13(hiByte, i1, i2, l1, l2) && kind > 130)
                     kind = 130;
                  break;
               case 46:
                  if (jjCanMove_14(hiByte, i1, i2, l1, l2) && kind > 131)
                     kind = 131;
                  break;
               case 47:
                  if (jjCanMove_15(hiByte, i1, i2, l1, l2) && kind > 133)
                     kind = 133;
                  break;
               case 48:
                  if (jjCanMove_16(hiByte, i1, i2, l1, l2) && kind > 134)
                     kind = 134;
                  break;
               case 49:
                  if (jjCanMove_17(hiByte, i1, i2, l1, l2) && kind > 135)
                     kind = 135;
                  break;
               case 50:
                  if (jjCanMove_18(hiByte, i1, i2, l1, l2) && kind > 136)
                     kind = 136;
                  break;
               case 51:
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2) && kind > 137)
                     kind = 137;
                  break;
               case 52:
                  if (jjCanMove_20(hiByte, i1, i2, l1, l2) && kind > 138)
                     kind = 138;
                  break;
               case 53:
                  if (jjCanMove_21(hiByte, i1, i2, l1, l2) && kind > 139)
                     kind = 139;
                  break;
               case 54:
                  if (jjCanMove_22(hiByte, i1, i2, l1, l2) && kind > 141)
                     kind = 141;
                  break;
               case 55:
                  if (jjCanMove_23(hiByte, i1, i2, l1, l2) && kind > 142)
                     kind = 142;
                  break;
               case 56:
                  if (jjCanMove_24(hiByte, i1, i2, l1, l2) && kind > 143)
                     kind = 143;
                  break;
               case 57:
                  if (jjCanMove_25(hiByte, i1, i2, l1, l2) && kind > 144)
                     kind = 144;
                  break;
               case 58:
                  if (jjCanMove_26(hiByte, i1, i2, l1, l2) && kind > 147)
                     kind = 147;
                  break;
               case 59:
                  if (jjCanMove_27(hiByte, i1, i2, l1, l2) && kind > 148)
                     kind = 148;
                  break;
               case 60:
                  if (jjCanMove_28(hiByte, i1, i2, l1, l2) && kind > 153)
                     kind = 153;
                  break;
               case 61:
                  if (jjCanMove_29(hiByte, i1, i2, l1, l2) && kind > 155)
                     kind = 155;
                  break;
               case 62:
                  if (jjCanMove_30(hiByte, i1, i2, l1, l2) && kind > 161)
                     kind = 161;
                  break;
               case 63:
                  if (jjCanMove_31(hiByte, i1, i2, l1, l2) && kind > 162)
                     kind = 162;
                  break;
               case 64:
                  if (jjCanMove_32(hiByte, i1, i2, l1, l2) && kind > 163)
                     kind = 163;
                  break;
               case 65:
                  if (jjCanMove_33(hiByte, i1, i2, l1, l2) && kind > 164)
                     kind = 164;
                  break;
               case 66:
                  if (jjCanMove_34(hiByte, i1, i2, l1, l2) && kind > 165)
                     kind = 165;
                  break;
               case 67:
                  if (jjCanMove_35(hiByte, i1, i2, l1, l2) && kind > 166)
                     kind = 166;
                  break;
               case 68:
                  if (jjCanMove_36(hiByte, i1, i2, l1, l2) && kind > 167)
                     kind = 167;
                  break;
               case 69:
                  if (jjCanMove_37(hiByte, i1, i2, l1, l2) && kind > 168)
                     kind = 168;
                  break;
               case 70:
                  if (jjCanMove_38(hiByte, i1, i2, l1, l2) && kind > 169)
                     kind = 169;
                  break;
               case 71:
                  if (jjCanMove_39(hiByte, i1, i2, l1, l2) && kind > 170)
                     kind = 170;
                  break;
               case 72:
                  if (jjCanMove_40(hiByte, i1, i2, l1, l2) && kind > 171)
                     kind = 171;
                  break;
               case 73:
                  if (jjCanMove_41(hiByte, i1, i2, l1, l2) && kind > 172)
                     kind = 172;
                  break;
               case 74:
                  if (jjCanMove_42(hiByte, i1, i2, l1, l2) && kind > 173)
                     kind = 173;
                  break;
               case 75:
                  if (jjCanMove_43(hiByte, i1, i2, l1, l2) && kind > 174)
                     kind = 174;
                  break;
               case 76:
                  if (jjCanMove_44(hiByte, i1, i2, l1, l2) && kind > 175)
                     kind = 175;
                  break;
               case 77:
                  if (jjCanMove_45(hiByte, i1, i2, l1, l2) && kind > 176)
                     kind = 176;
                  break;
               case 78:
                  if (jjCanMove_46(hiByte, i1, i2, l1, l2) && kind > 177)
                     kind = 177;
                  break;
               case 79:
                  if (jjCanMove_47(hiByte, i1, i2, l1, l2) && kind > 178)
                     kind = 178;
                  break;
               case 80:
                  if (jjCanMove_48(hiByte, i1, i2, l1, l2) && kind > 179)
                     kind = 179;
                  break;
               case 81:
                  if (jjCanMove_49(hiByte, i1, i2, l1, l2) && kind > 180)
                     kind = 180;
                  break;
               case 84:
                  if (jjCanMove_50(hiByte, i1, i2, l1, l2) && kind > 182)
                     kind = 182;
                  break;
               case 85:
                  if (jjCanMove_51(hiByte, i1, i2, l1, l2) && kind > 183)
                     kind = 183;
                  break;
               case 86:
                  if (jjCanMove_52(hiByte, i1, i2, l1, l2) && kind > 185)
                     kind = 185;
                  break;
               case 87:
                  if (jjCanMove_53(hiByte, i1, i2, l1, l2) && kind > 192)
                     kind = 192;
                  break;
               case 88:
                  if (jjCanMove_54(hiByte, i1, i2, l1, l2) && kind > 193)
                     kind = 193;
                  break;
               case 89:
                  if (jjCanMove_55(hiByte, i1, i2, l1, l2) && kind > 199)
                     kind = 199;
                  break;
               case 90:
                  if (jjCanMove_56(hiByte, i1, i2, l1, l2) && kind > 201)
                     kind = 201;
                  break;
               case 91:
                  if (jjCanMove_57(hiByte, i1, i2, l1, l2) && kind > 203)
                     kind = 203;
                  break;
               case 92:
                  if (jjCanMove_58(hiByte, i1, i2, l1, l2) && kind > 207)
                     kind = 207;
                  break;
               case 93:
                  if (jjCanMove_59(hiByte, i1, i2, l1, l2) && kind > 209)
                     kind = 209;
                  break;
               case 94:
                  if (jjCanMove_60(hiByte, i1, i2, l1, l2) && kind > 210)
                     kind = 210;
                  break;
               case 95:
                  if (jjCanMove_61(hiByte, i1, i2, l1, l2) && kind > 223)
                     kind = 223;
                  break;
               case 96:
                  if (jjCanMove_62(hiByte, i1, i2, l1, l2) && kind > 224)
                     kind = 224;
                  break;
               case 97:
                  if (jjCanMove_63(hiByte, i1, i2, l1, l2) && kind > 225)
                     kind = 225;
                  break;
               case 98:
                  if (jjCanMove_64(hiByte, i1, i2, l1, l2) && kind > 226)
                     kind = 226;
                  break;
               case 99:
                  if (jjCanMove_65(hiByte, i1, i2, l1, l2) && kind > 227)
                     kind = 227;
                  break;
               case 100:
                  if (jjCanMove_66(hiByte, i1, i2, l1, l2) && kind > 228)
                     kind = 228;
                  break;
               case 101:
                  if (jjCanMove_67(hiByte, i1, i2, l1, l2) && kind > 230)
                     kind = 230;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 526 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_3(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_3(int pos, long active0)
{
   return jjMoveNfa_3(jjStopStringLiteralDfa_3(pos, active0), pos + 1);
}
private final int jjStartNfaWithStates_3(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_3(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_3()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_3(0x20000000L);
      default :
         return jjMoveNfa_3(0, 0);
   }
}
private final int jjMoveStringLiteralDfa1_3(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 41:
         if ((active0 & 0x20000000L) != 0L)
            return jjStopAtPos(1, 29);
         break;
      default :
         break;
   }
   return jjStartNfa_3(0, active0);
}
private final int jjMoveNfa_3(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 4;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (curChar == 40)
                     jjAddStates(3, 4);
                  break;
               case 1:
                  if (curChar == 46)
                     kind = 28;
                  break;
               case 2:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if (curChar == 42 && kind > 28)
                     kind = 28;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 4 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   1, 2, 8, 2, 3, 24, 25, 28, 29, 32, 33, 34, 36, 37, 2, 3, 
   9, 14, 15, 51, 53, 54, 56, 51, 53, 54, 56, 57, 40, 44, 48, 25, 
   28, 29, 32, 33, 34, 426, 427, 430, 431, 434, 435, 436, 438, 439, 479, 482, 
   485, 489, 490, 492, 493, 500, 465, 466, 468, 470, 472, 474, 477, 461, 462, 416, 
   417, 418, 182, 183, 184, 185, 168, 172, 173, 174, 177, 32, 33, 36, 38, 409, 
   410, 411, 413, 414, 34, 35, 159, 160, 166, 495, 497, 499, 453, 455, 456, 458, 
   459, 442, 446, 450, 421, 422, 423, 424, 211, 217, 218, 224, 226, 228, 229, 235, 
   240, 247, 253, 256, 260, 264, 267, 270, 275, 277, 279, 281, 282, 286, 292, 298, 
   301, 306, 311, 316, 324, 332, 342, 352, 356, 362, 370, 374, 380, 386, 394, 399, 
   401, 406, 407, 506, 512, 521, 525, 193, 201, 209, 153, 156, 142, 150, 126, 134, 
   113, 115, 117, 427, 430, 431, 434, 435, 436, 487, 488, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec0[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_1(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec1[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_2(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec2[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_3(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 39:
         return ((jjbitVec3[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_4(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 39:
         return ((jjbitVec4[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_5(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 33:
         return ((jjbitVec5[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_6(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 33:
         return ((jjbitVec6[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_7(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 33:
         return ((jjbitVec7[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_8(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec10[i2] & l2) != 0L);
      default : 
         if ((jjbitVec8[i1] & l1) != 0L)
            return true;
         return false;
   }
}
private static final boolean jjCanMove_9(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 32:
         return ((jjbitVec11[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_10(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec12[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_11(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 37:
         return ((jjbitVec13[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_12(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 37:
         return ((jjbitVec14[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_13(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec15[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_14(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec16[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_15(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec17[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_16(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec18[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_17(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec19[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_18(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 37:
         return ((jjbitVec20[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_19(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 32:
         return ((jjbitVec21[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_20(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec22[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_21(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec23[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_22(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec24[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_23(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec25[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_24(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec26[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_25(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec27[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_26(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec28[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_27(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec29[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_28(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec30[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_29(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 37:
         return ((jjbitVec31[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_30(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec32[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_31(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec33[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_32(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec34[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_33(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 255:
         return ((jjbitVec35[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_34(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec36[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_35(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec37[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_36(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec38[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_37(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec39[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_38(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec6[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_39(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec40[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_40(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec5[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_41(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec41[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_42(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec42[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_43(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec43[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_44(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec44[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_45(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec45[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_46(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec46[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_47(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec47[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_48(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec48[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_49(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec49[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_50(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 33:
         return ((jjbitVec50[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_51(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 33:
         return ((jjbitVec51[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_52(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 42:
         return ((jjbitVec52[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_53(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec53[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_54(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 41:
         return ((jjbitVec24[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_55(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec54[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_56(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec55[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_57(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec56[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_58(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 32:
         return ((jjbitVec57[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_59(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec58[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_60(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec59[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_61(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec60[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_62(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec61[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_63(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec62[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_64(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec63[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_65(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec64[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_66(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec65[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_67(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec66[i2] & l2) != 0L);
      default : 
         return false;
   }
}
public static final String[] jjstrLiteralImages = {
"", null, "\55\55\55\76", null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, 
"\101\123\123\125\115\105", "\133\135\101\123\123\125\115\105", null, "\103\101\123\105", 
"\103\110\117\117\123\105", null, "\105\114\123\105", "\105\130\103\105\120\124", null, 
"\105\130\124\105\116\104\123", null, "\111\106", "\111\116\123\124\101\116\103\105", "\114\105\124", 
"\111\116", "\114\117\103\101\114", "\115\117\104\125\114\105", "\116\105\127", 
"\117\124\110\105\122", null, "\123\106\137", null, null, "\124\110\105\116", "\102\131", 
"\117\116\114\131", "\104\105\106\111\116\105", null, "\124\110\105\117\122\105\115", 
"\125\123\105", "\110\111\104\105", "\110\101\126\105", "\117\102\126\111\117\125\123", 
"\117\115\111\124\124\105\104", "\114\101\115\102\104\101", "\124\101\113\105", "\120\122\117\117\106", 
"\120\122\117\126\105", "\133\135\120\122\117\126\105", "\121\105\104", 
"\122\105\103\125\122\123\111\126\105", "\123\124\101\124\105", null, "\120\111\103\113", 
"\127\111\124\116\105\123\123", "\123\125\106\106\111\103\105\123", null, "\127\106\137", "\127\111\124\110", 
"\54", "\72", "\72\72", "\56", "\137", null, "\50", "\51", "\55\174\55", "\133", 
"\135\137", "\135", "\173\174", "\174\175", "\173", "\175", null, null, null, "\41", null, 
null, null, null, null, null, null, null, "\136\53", "\136\52", "\136\43", "\55\56", 
"\134\154\156\157\164", "\134\156\145\147", null, null, null, "\105\116\101\102\114\105\104", 
"\125\116\103\110\101\116\107\105\104", "\123\125\102\123\105\124", "\125\116\111\117\116", 
"\104\117\115\101\111\116", "\57\57", null, null, "\57", null, null, null, null, null, null, null, 
"\134\143\151\162\143", null, null, null, null, "\134\145\161\165\151\166", "\134\147\145\161", null, 
null, "\134\151\156\164\145\162\163\145\143\164", "\134\165\156\151\157\156", 
"\134\154\141\156\144", "\134\154\145\161", null, "\134\154\157\162", null, "\134\157\144\157\164", 
"\134\157\155\151\156\165\163", "\134\157\160\154\165\163", "\134\157\163\154\141\163\150", 
"\134\157\164\151\155\145\163", null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, "\134", null, null, "\75\74", null, "\75", 
"\43\43", "\43", "\136\136", "\136", "\55\55", null, null, "\55", "\52\52", "\52", 
"\53\53", "\53", null, "\74\72", null, "\74", null, "\76", "\56\56\56", "\56\56", null, 
"\174", null, null, "\46\46", "\46", "\44\44", "\44", "\77\77", "\45\45", "\45", 
"\100\100", "\41\41", "\72\76", "\72\75", "\72\72\75", null, null, null, null, null, null, 
"\134\164\151\155\145\163", null, null, null, null, null, null, null, };
public static final String[] lexStateNames = {
   "DEFAULT", 
   "PRAGMA", 
   "SPEC", 
   "IN_COMMENT", 
   "EMBEDDED", 
   "IN_EOL_COMMENT", 
};
public static final int[] jjnewLexState = {
   -1, -1, 1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, 
   -1, 3, 5, 4, 2, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xfffffffc0018000dL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0x1fffffffffffL, 
};
static final long[] jjtoSkip = {
   0x1f3e00010L, 0x0L, 0x0L, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x1f0000000L, 0x0L, 0x0L, 0x0L, 
};
static final long[] jjtoMore = {
   0x20c000000L, 0x0L, 0x0L, 0x0L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[526];
private final int[] jjstateSet = new int[1052];
StringBuffer image;
int jjimageLen;
int lengthOfMatch;
protected char curChar;
public TLAplusParserTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}
public TLAplusParserTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private final void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 526; i-- > 0;)
      jjrounds[i] = 0x80000000;
}
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}
public void SwitchTo(int lexState)
{
   if (lexState >= 6 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   Token t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   String im = jjstrLiteralImages[jjmatchedKind];
   t.image = (im == null) ? input_stream.GetImage() : im;
   t.beginLine = input_stream.getBeginLine();
   t.beginColumn = input_stream.getBeginColumn();
   t.endLine = input_stream.getEndLine();
   t.endColumn = input_stream.getEndColumn();
   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

public Token getNextToken() 
{
  int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }
   image = null;
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         if (jjmatchedPos == 0 && jjmatchedKind > 4)
         {
            jjmatchedKind = 4;
         }
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 21)
         {
            jjmatchedKind = 21;
         }
         break;
       case 2:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_2();
         break;
       case 3:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_3();
         if (jjmatchedPos == 0 && jjmatchedKind > 33)
         {
            jjmatchedKind = 33;
         }
         break;
       case 4:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_4();
         if (jjmatchedPos == 0 && jjmatchedKind > 33)
         {
            jjmatchedKind = 33;
         }
         break;
       case 5:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_5();
         if (jjmatchedPos == 0 && jjmatchedKind > 33)
         {
            jjmatchedKind = 33;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           matchedToken.specialToken = specialToken;
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
           {
              matchedToken = jjFillToken();
              if (specialToken == null)
                 specialToken = matchedToken;
              else
              {
                 matchedToken.specialToken = specialToken;
                 specialToken = (specialToken.next = matchedToken);
              }
              SkipLexicalActions(matchedToken);
           }
           else 
              SkipLexicalActions(null);
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        jjimageLen += jjmatchedPos + 1;
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 28 :
         if (image == null)
            image = new StringBuffer();
         image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                     bracketCount++;
         break;
      case 30 :
         if (image == null)
            image = new StringBuffer();
         image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
            bracketCount--; if (bracketCount == 0) SwitchTo( IN_COMMENT );
         break;
      case 31 :
         if (image == null)
            image = new StringBuffer();
         image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                     bracketCount++;
         break;
      default :
         break;
   }
}
}
